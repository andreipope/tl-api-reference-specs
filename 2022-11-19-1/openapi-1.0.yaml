x-readme:
  samples-languages:
    - "http"
    - "curl"
    - "python"
    - "go"
    - "node"
openapi: 3.1.0
info:
  title: Twelve Labs Video Understanding API
  description: |
    Use the Twelve Labs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses.

    ## Call an Endpoint
    
    To call an endpoint, you must construct a URL similar to the following one:
    ```
    {Method} {BaseURL}/{version}/{resource}/{path_parameters}?{query_parameters}
    ```

    The list below describes each component of a request:
    - **Method**: The API supports the following methods:
      - `GET`: Reads data.
      - `POST`: Creates a new object or performs an action.
      - `PUT`: Updates an object.
      - `DELETE`: Deletes an object.
      Note that the `POST` and `PUT` methods require you to pass a request body containing additional parameters.
    - **Base URL**: The base URL of the API is https://api.twelvelabs.io.
    - **Version:** To use the `v1` version of the API, it must be set to `v1`.
    - **Resource**: The name of the resource you want to interact with.
    - **Path Parameters**: Allow you to indicate a specific object. For example, you can retrieve details about an engine or index. 
    - **Query Parameters**: Any parameters that an endpoint accepts. For example, you can filter or sort a response using query parameters.
    Note that the API requires you to pass a header parameter containing your API key to authenticate each request. For details, see the [Authentication](/docs/guides-authentication) page.
  contact:
    name: Twelve Labs Support
    email: support@twelvelabs.io
  version: 1.0.0
x-stoplight:
  id: 8y4w11j9s7zjg
servers:
  - url: 'https://api.twelvelabs.io/v1'

################
###   Tags   ###
################

tags:
  - name: Engines
  - name: Indexes
  - name: Indexes/Tasks
  - name: Indexes/Tasks/Transfers
  - name: Indexes/Videos
  - name: Search

paths:

###################
###   Engines   ###
###################

  '/engines':
    get:
      summary: List search engines
      description: This method lists all the search engines that are available in your account.
      operationId: listEngines
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/components/responses/getEnginesResponse'
        '400':
          $ref: '#/components/responses/genericError'
  '/engines/{engine-id}':
    get:
      summary: Retrieve a search engine
      description: This method retrieves a search engine.
      operationId: retrieveSearchEngine
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: engine-id
          in: path
          description: |
            The identifier of the engine to retrieve.
            
            The following search engines are available:
            - `marengo2`
            - `marengo`
            
            For details about the features of each search engine, see the [Search engines](/docs/concepts-search-engines) page.
          required: true
          schema:
            type: string
            default: marengo2
      responses:
        '200':
          $ref: '#/components/responses/getEngineResponse'
        '400':
          $ref: '#/components/responses/getEngineError'

###################
###   Indexes   ###
###################

  '/indexes':
    post:
      summary: Create an index
      description: This method creates an index.
      operationId: createIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/createIndex'
      responses:
        '200':
          $ref: '#/components/responses/createIndexResponse'
        '400':
          $ref: '#/components/responses/createIndexError'
    get:
      summary: List indexes
      description: 'This method returns a list of the indexes in your account. The API returns indexes sorted by creation date, with the oldest indexes at the top of the list.'
      operationId: listIndexes
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: _id
          in: query
          description: Filter by the unique identifier of an index.
          required: false
          schema:
            type: string
        - name: index_name
          in: query
          description: Filter by the name of the index.
          required: false
          schema:
            type: string
        - name: index_options
          in: query
          description: |
            Filter by the indexing options. When filtering multiple indexing options, the values must be comma-separated.
            Example: `index_options=visual,conversation`.
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getIndexesResponse'
        '400':
          $ref: '#/components/responses/getIndexesError'
  '/indexes/{index-id}':
    get:
      summary: Retrieve an index
      description: This method retrieves details about the specified index.
      operationId: retrieveIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getIndexResponse'
        '400':
          $ref: '#/components/responses/getIndexError'
    put:
      summary: Update an index
      description: This method updates the name of the specified index.
      operationId: updateIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to update.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/updateIndex'
      responses:
        '200':
          $ref: '#/components/responses/updateIndexResponse'
        '400':
          $ref: '#/components/responses/updateIndexError'
    delete:
      summary: Delete an index
      description: This method deletes the specified index and all the videos within it. This action cannot be undone.
      operationId: deleteIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/deleteIndexResponse'
        '400':
          $ref: '#/components/responses/deleteIndexError'

#########################
###   Indexes/Tasks   ###
#########################

  '/indexes/tasks':
    post:
      summary: Create a video indexing task
      description: |
        Use this method to create a new video indexing task that uploads a video to the API service and makes it searchable. Note the following about creating a new video indexing task:
        - To upload a file that resides on the local file system, pass the `video_file` parameter. It must be a stream of bytes encoded as `multipart/form-data`.
        - To upload a file from a publicly accessible URL, pass the `video_url` parameter with the URL of your video. It must be a `string`.
        - You must specify at least one of the `video_file` and `video_url` parameters. If you specify both the `video_url` and `video_file` parameters in the same request, the `video_url` parameter takes precedence over `video_file`.
        - To provide a transcription file, you must set the `provide_transcription` parameter to `true` and specify at least one of the `transcription_file` and `transcription_url` parameters:
          - Use the `transcription_file` parameter to provide a transcription from the local file system. It must be a stream of bytes encoded as `multipart/form-data`.
          - Use the `transcription_url` parameter to provide a transcription file from a publicly accessible URL. It must be a `string`.
      operationId: createVideoIndexingTask
      tags:
        - Indexes/Tasks
      requestBody:
        $ref: '#/components/requestBodies/createVideoIndexingTask'
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: Content-Type
          in: header
          description: Must be set to `multipart/form-data`.
          required: true
          schema:
            type: string
            enum:
              - multipart/form-data
      responses:
        '200':
          $ref: '#/components/responses/createVideoIndexingTaskResponse'
        '400':
          $ref: '#/components/responses/createVideoIndexingTaskError'
    get:
      summary: List video indexing tasks
      description: |
        This method returns a list of the video indexing tasks in your account. If no parameters are specified, the API returns your video indexing tasks sorted by creation date, with the newest at the top of the list.
      operationId: listVideoIndexingTasks
      tags:
        - Indexes/Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: _id
          in: query
          description: |
            Filter by the unique identifier of a video indexing task. 
          required: false
          schema:
            type: string
        - name: index_id
          in: query
          description: |
            Filter by the unique identifier of an index.
          required: false
          schema:
            type: string
        - name: filename
          in: query
          description: |
            Filter by filename.
          required: false
          schema:
            type: string
        - name: duration
          in: query
          description: |
            Filter by duration. Expressed in seconds.
          required: false
          schema:
            type: integer
        - name: width
          in: query
          description: |
            Filter by width.
          required: false
          schema:
            type: integer
        - name: height
          in: query
          description: |
            Filter by height.
          required: false
          schema:
            type: integer
        - name: created_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
          required: false
          schema:
            type: string
        - name: updated_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was updated.
          required: false
          schema:
            type: string
        - name: estimated_time
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task is ready to be searched.
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/getVideoIndexingTasksResponse'
        '400':
          $ref: '#/components/responses/getVideoIndexingTasksError'
  
  '/indexes/tasks/{task-id}':
    get:
      summary: Retrieve a video indexing task
      description: This method retrieves a video indexing task.
      operationId: retrieveVideoIndexingTask
      tags:
        - Indexes/Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: task-id
          in: path
          description: |
            The unique identifier of the video indexing task to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoIndexingTaskResponse'
        '400':
          $ref: '#/components/responses/getVideoIndexingTaskError'
    delete:
      summary: Delete a video indexing task
      description: |
        This action cannot be undone.
        Note the following about deleting a video indexing task:
        - You can only delete video indexing tasks for which the status is `ready` or `failed`.
        - If the status of your video indexing task is ready, you must first delete the video vector associated with your video indexing task by calling the `DELETE` method of the `/indexes/videos` endpoint.
      operationId: deleveVideoIndexingTask
      tags:
        - Indexes/Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: task-id
          in: path
          description: |
            The unique identifier of the video indexing task you want to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/deleteVideoIndexingTask'
        '400':
          $ref: '#/components/responses/deleteVideoIndexingTaskError'

  '/indexes/tasks/{task-id}/video-id':
    get:
      summary: Retrieve the video ID associated with a task ID
      description: 'Provide the ID of a video indexing task, and the API service will return the corresponding video ID.'
      operationId: retrieveVideoIdTaskId
      tags:
        - Indexes/Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: task-id
          required: true
          in: path
          description: |
            A task ID that the API returned when you created a video indexing task.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoVectorIdResponse'
        '400':
          $ref: '#/components/responses/getVideoVectorIdError'

  '/indexes/{index-id}/tasks/status':
    get:
      summary: Retrieve the number of tasks in each status
      description: |
        This method retrieves the number of video indexing tasks in each status for the specified index.
      operationId: retrieveTasksInEachStatus
      tags:
        - Indexes/Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          required: true
          in: path
          description: The unique identifier of the index for which you want to retrieve the number video indexing tasks in each status.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/retrieveTasksInEachStatus'
        '400':
          $ref: '#/components/responses/retrieveTasksInEachStatusError'
        

###########################
###   Tasks/Transfers   ###
###########################

  '/indexes/tasks/transfers':
    post:
      summary: Make a cloud-to-cloud transfer
      description: This method makes a cloud-to-cloud transfer.
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: Content-Type
          in: header
          description: Must be set to `multipart/form-data`.
          required: true
          schema:
            type: string
            enum:
              - multipart/form-data
      operationId: cloud-to-cloud-transfer
      tags:
        - Indexes/Tasks/Transfers
      requestBody:
        $ref: '#/components/requestBodies/cloud-to-cloud-transfer'
      responses:
        '200':
          $ref: '#/components/responses/cloudToCloudTransferResponse'
        '400':
          $ref: '#/components/responses/cloudToCloudTransferError'

##########################
###   Indexes/Videos   ###
##########################

  '/indexes/{index-id}/videos':
    get:
      summary: List videos
      operationId: listVideoInformation
      description: |
        This method returns a list of the videos in the specified index. If no parameters are specified, the API returns your videos sorted by creation date, with the newest at the top of the list.
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: index-id
          in: path
          description: The unique identifier of the index for which the API will retrieve the videos.
          schema:
            type: string
          required: true
        - name: _id
          in: query
          description: |
            Filter by the unique identifier of a video index.
          required: false
          schema:
            type: string
        - name: filename
          in: query
          description: |
            Filter by filename.
          required: false
          schema:
            type: string
        - name: duration
          in: query
          description: |
            Filter by duration. Expressed in seconds.
          schema:
            type: number
        - name: fps
          in: query
          description: |
            Filter by frames per second.
          required: false
          schema:
            type: number
        - name: width
          in: query
          description: |
            Filter by width.
          required: false
          schema:
            type: number
        - name: height
          in: query
          description: |
            Filter by height.
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: |
            Filter by size. Expressed in bytes.
          required: false
          schema:
            type: number
        - name: created_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
          required: false
          schema:
            type: string
        - name: updated_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was updated.
          required: false
          schema:
            type: string
        - name: indexed_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video has finished indexing.
          required: false
          schema:
            type: string
        - name: metadata # Arbitrary name that won't be included in the request URL.
          in: query
          description: |
            You can filter by any of the custom fields specified by invoking the `PUT` method of the `/indexes/:index-id/videos/:video-id` method.

            Examples:
            - To filter on a string: `?category=recentlyAdded`
            - To filter on an integer: `?batchNumber=5`
            - To filter on a float: `?rating=9.3`
            - To filter on a boolean: `?needsReview=true`
          schema:
            type: object
            propertyNames:
              pattern: '^[A-Za-z][A-Za-z0-9]*$'  # Parameter names
            additionalProperties:
              pattern: '^[A-Za-z][A-Za-z0-9]*$'
          style: form
          explode: true
      responses:
        '200':
          $ref: '#/components/responses/getVideoVectorsResponse'
        '400':
          $ref: '#/components/responses/getVideoVectorsError'
  
  '/indexes/{index-id}/videos/{video-id}':
    get:
      summary: Retrieve video information
      description: This method retrieves information about the specified video.
      operationId: retrieveVideoInformation
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoVectorResponse'
        '400':
          $ref: '#/components/responses/getVideoVectorError'
    put:
      summary: Update video information
      description: Use this method to update the title and the metadata of a video.
      operationId: updateVideoInformation
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video to update.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/update-video-vector'
      responses:
        '200':
          $ref: '#/components/responses/updateVideoVectorResponse'
        '400':
          $ref: '#/components/responses/updateVideoVectorError'

    delete:
      summary: Delete video information
      operationId: deleteVideoInformation
      tags:
        - Indexes/Videos
      description: |
        This method deletes all the information about the specified video This action cannot be undone.
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/deleteVideoVectorResponse'
        '400':
          $ref: '#/components/responses/deleteVideoVectorError'
  
  '/indexes/{index-id}/videos/{video-id}/transcription':
    get:
      summary: Retrieve a transcription
      description: This method retrieves a transcription of the spoken words.
      operationId: retrieveTranscription
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video for which you want to retrieve a transcription.
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: |
            The start of the time range (in seconds) to retrieve transcription for.
          required: false
          schema:
            type: number
        - name: end
          in: query
          description: |
            The end of the time range (in seconds) to retrieve transcription for.
          required: false
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/retrieveTranscriptionResponse'
        '400':
          $ref: '#/components/responses/retrieveTranscriptionError'
  
  '/indexes/{index-id}/videos/{video-id}/text-in-video':
    get:
      summary: Retrieve text recognized in video (OCR)
      description: This method retrieves text recognized in video (OCR).
      operationId: retrieveOCR
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video.
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: |
            The start of the time range (in seconds) to retrieve OCRs for.
          required: false
          schema:
            type: number
        - name: end
          in: query
          description: |
            The end of the time range (in seconds) to retrieve OCRs for.
          required: false
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/retrieveOcrResponse'
        '400':
          $ref: '#/components/responses/retrieveOcrError'

  '/indexes/{index-id}/videos/{video-id}/thumbnail':
    get:
      summary: Retrieve a thumbnail
      description: To use this feature, you must enable thumbnail generation for the index with which the video is associated. For details, see the [Create an index](/reference/createindex) section.
      operationId: retrieveThumbnail
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video from which you want to retrieve a thumbnail.
          required: true
          schema:
            type: string
        - name: time
          in: query
          description: |
            Specifies the time, in seconds, at which the API service must retrieve the thumbnail. If you don't specify this parameter, the API service retrieves a thumbnail from the middle of the video.
          required: false
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/retrieveThumbnailResponse'
        '400':
          $ref: '#/components/responses/retrieveThumbnailError'

##################
###   Search   ###
##################
  '/search':
    post:
      summary: Make a search request
      tags:
        - Search
      description: |
        Use this endpoint to search for relevant matches in an index. This endpoint returns the first page of results. To retrieve the subsequent pages, you must call the POST method of the `/search/{page-id}` endpoint, passing it the unique identifier of the page you want to retrieve.

        **NOTE**: When you use pagination, you will not be charged for retrieving subsequent pages of results.
      operationId: search
      requestBody:
        $ref: '#/components/requestBodies/search'
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/components/responses/searchResultsResponse'
        '400':
          $ref: '#/components/responses/searchResultsError'

  '/search/{page-id}':
    post:
      summary: Retrieve a specific page of search results
      tags:
        - Search
      description: |
        Use this endpoint to retrieve a specific page of search results.

        **NOTE**: When you use pagination, you will not be charged for retrieving subsequent pages of results.
      operationId: search-page-id
      requestBody:
        $ref: '#/components/requestBodies/search'
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: page-id
          in: path
          required: true
          description: |
            A token that identifies the page to retrieve.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/searchResultsResponsePageId'
        '400':
          $ref: '#/components/responses/searchResultsError'

components:

###################
###   Schemas   ###
###################

  schemas:
    engine:
      description: ''
      title: Engine
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the identifier of the search engine.
        allowed_index_options:
          type: array
          description: |
            An array of strings representing the supported indexing options. For details, see the [Indexing options](/docs/concepts-indexing-options) page.
          items:
            type: string
        author:
          type: string
          description: |
            A string indicating who created the index.
        created_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the engine was created.
        updated_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the engine was updated.
        finetune:
          type: boolean
          description: |
            A boolean indicating whether this engine supports fine-tunning. This feature is on the [roadmap](/docs/roadmap).
        ready:
          type: boolean
          description: A boolean specifying whether this engine is ready to be used.
        type:
          type: string
          description: Specifies the type of resource (`engine`).
      example:
        id: marengo2
        created_at: '2022-07-04 03:05:27.068 +0000 UTC'
        updated_at: '2022-07-04 03:05:27.068 +0000 UTC'
        allowed_index_options:
          - visual
          - text_in_video
          - conversation
        author: twelve_labs
        finetune: false
        ready: true
        type: engine
    index:
      title: Index
      description: |
        An index groups one or more videos stored as vectors and is the most granular level at which you can perform a search.
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of the index. It is assigned by the API when an index is created.
        index_name:
          type: string
          description: |
            A string representing the name of the index.
        index_options:
          type: array
          description: |
            An array of strings that determines how the engine processes your videos.
            
            Twelve Labs currently offers three different indexing options: `visual`, `conversation`, and `text_in_video`. For more details, see the [Indexing options](/docs/concepts-indexing-options) page.

            **NOTES**:
            - The indexing options cannot be changed once the index has been created.
            - The types of searches you can perform on this index are a subset of the indexing options.
          items:
            type: string
            enum:
              - visual
              - conversation
              - text_in_video
        created_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was created.
        updated_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was updated.
        engine_id:
          type: string
          description: |
            A string representing the unique identifier of the engine that the API will use to index the videos in this index.
        video_count:
          type: integer
          description: |
            An integer representing the number of videos in the index.
        total_duration:
          type: number
          description: |
            A number representing the total duration, in seconds, of the videos in the index.
        addons:
          type: array
          description: |
            The list of add-ons that are enabled for this index.
          items:
            type: string
      example:
        _id: 62d9bafa90077fc60af827a0
        index_name: myIndex
        index_options:
          - visual
          - text_in_video
          - conversation
        created_at: '2022-07-04T13:58:39.262Z'
        updated_at: '2022-07-05T11:11:32.026Z'
        engine_id: marengo2
        video_count: 12
        total_duration: 8716.8969
        addons:
          - thumbnail
    videoIndexingTask:
      title: Video Indexing Task
      description: |
        A task represents a request to upload and index a video. A task starts when you begin uploading your video by calling the **POST** method of the `indexes/tasks` endpoint, and it can have one of the following statuses:
        - **Validating**: Your video has finished uploading, and the API service is validating it by performing the following checks:
          - Resolution must be greater or equal than 360p and less than 1080p (FHD).
          - Duration must be between 10 seconds and 2 hours (7,200s).
          - Your video must contain an audio track.
          - Your video must not have missing frames.
        - **Pending**: The API is spawning a new worker server to process your video.
        - **Indexing**: The API is transforming the video you uploaded into vectors. A vector is like a compressed version of the video and contains all the information that Twelve Labs' deep-learning models need to perform fast, semantic, accurate, and scalable searches.
        - **Ready**: Your video is ready to be searched.
        Additionally, you may receive one of the following error messages:
        - **Broken Video File**: Your video has broken frame(s) or does not contain an audio track.
        - **Failed**: The API service encountered an internal error, and the video indexing task failed.
        The `task` object has the following elements:
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of the task. It is assigned by the API service when a new task is created.
        created_at:
          type: string
          description: 'A string indicating the date and time, in the RFC 3339 format, that the task was created.'
        updated_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
        status:
          type: string
          description: A string indicating the status of the video indexing task.
        estimated_time:
          type: string
          description: |
            A string indicating the estimated date and time, in the RFC 3339 format, that the video is ready to be searched.
        index_id:
          type: string
          description: |
            A string pointing to the index to which the video is assigned.
        metadata:
          type: object
          description: |
            An object that contains information about the video.
          properties:
            duration:
              type: number
            filename:
              type: string
            height:
              type: integer
            width:
              type: integer
      example:
        _id: 62a17bf847f5678267ec10cc
        created_at: 2022-06-09T04:50:00.879Z
        updated_at: 2022-06-09T04:55:57.256Z
        status: ready
        estimated_time: 2022-06-09T04:55:53.746Z
        index_id: 630aff993fcee0532cb809d0
        metadata:
          duration: 531.998133
          filename: 01.mp4
          height: 480
          width: 854

    videoVector:
      type: object
      title: Video Vector
      description: |
        When the API service indexes a video, it doesn't store it. Instead, the API service saves all the required information needed to perform fast, semantic, accurate, and scalable searches as lists of floating numbers. These lists are named video vectors.

        The `video_vector` object has the following elements:
      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of a video. The API service creates a new `video_vector` object and assigns it a unique identifier when the video has successfully been indexed, and it's ready to be searched. Note that video IDs are different from task IDs. To map a task ID to a video ID, see the Retrieve a [Video ID based on a task ID](/reference/retrievevideoidtaskid) section.
        created_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video indexing task was created.
        updated_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video indexing task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
        indexed_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video has finished indexing.
        metadata:
          type: object
          description: |
            An object that contains information about the video.
          properties:
            filename:
              type: string
              example: 01.mp4
            duration:
              type: number
            fps:
              type: number
            width:
              type: integer
            height:
              type: integer
            size:
              type: number
      example:
        _id: 62bac61c154f59c87660cea3
        created_at: 2022-06-28T09:12:54
        updated_at: 2022-06-28T09:13:00Z
        indexed_at: 2022-06-28T09:26:42Z
        metadata:
          filename: 01.mp4
          duration: 741.875
          fps: 741.875
          width: 640
          height: 360
          size: 65749715

####################
### Parameters   ###
####################

  parameters:
    Content-Type:
      name: Content-Type
      in: header
      description: Must be set to `application/json`.
      required: true
      schema:
        type: string
        default: application/json
    x-api-key:
      name: x-api-key
      in: header
      description: |
        Your API key.
        
        **NOTE:** You can find your API key on the [Dashboard](https://api.twelvelabs.io/dashboard) page.
      required: true
      schema:
        type: string
    page:
      name: page
      in: query
      description: |
        A number that identifies the page to retrieve.
            
        **Default**: `1`.
      schema:
        type: integer
        default: 1
      required: false
    page_limit:
      name: page_limit
      in: query
      description: |
        The number of items to return on each page.
        
        **Default**: `10`.
        **Max**: `50`.
      schema:
        type: integer
        default: 10
      required: false
    sort_by:
      name: sort_by
      in: query
      description: |
        The field to sort on. The following options are available:
        - `updated_at`: Sorts by the time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, when the item was updated.
        - `created_at`: Sorts by the time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, when the item was created.

        **Default**: `created_at`.
      schema:
        type: string
        default: created_at
      required: false
    sort_option:
      name: sort_option
      in: query
      description: |
        The sorting direction. The following options are available:
        - `asc` 
        - `desc`

        **Default**: `desc`.
      schema:
        type: string
        default: desc
      required: false
  
#####################
###   Responses   ###
#####################

  responses:
    cloudToCloudTransferResponse:
      description: One or more video indexing tasks index has successfully been created.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: A human-readable string describing the result.
              type:
                type: string
                description: A human-readable string describing the type of operation.
          example:
            message: Succesfully requested indexing task
            type: index_task_create
    updateIndexResponse:
      description: The specified index has successfully been updated.
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                description: A human-readable string describing the result.
              type:
                type: string
                description: Describes the type of operation.
            example:
              message: Succesfully updated index 'myIndex'.
              type: update_index

    searchResultsResponse:
      description: Successfully performed a search request.
      content:
        application/json:
          schema:
            type: object
            properties:
              conversation_option:
                type: string
                description: |
                  Indicates the type of search the API performed.
              data:
                type: array
                description: An array that contains your search results. For each match found, the search engine returns the following fields.
                items:
                  type: object
                  properties:
                    score:
                      type: number
                      description: A quantitative value determined by the AI engine representing the similarity score between your search terms and the matching video fragment.
                    start:
                      type: number
                      description: Start time of the matching video fragment, expressed in seconds.
                    end:
                      type: number
                      description: End time of the matching video fragment, expressed in seconds.
                    video_id:
                      type: string
                      description: A string representing the unique identifier of the video. Once the API service indexes a video, it assigns a unique identifier. Note that this is different from the identifier of the video indexing task. To map the identifier of a video indexing task to the identifier of a video, you can use the `/indexes/tasks/:task-id/video-idendpoint`. For details, see the Retrieve a Video ID Based on a Task ID section.
                    metadata:
                      type: array
                      description: An array of objects where each object contains details about a specific type of match and has the following fields.
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: A string that indicates the type of match (`visual`, `conversation`, `text_in_video`).
                          text:
                            type: string
                            description: For `conversation` and `text_in_video`, the API returns a transcription of the spoken words or the text that matches your search query.
                    confidence:
                      type: string
                      description: |
                        A qualitative indicator measured by the internal QA team based on the value of the score field. This field can take one of the following values:
                        - `high`
                        - `medium`
                        - `low`
                        - `extremely low`
                    thumbnail_url:
                      type: string
                      description: |
                        If thumbnail generation has been enabled for this index, the API service returns a string representing the URL of the thumbnail. Note that the URL expires in one hour.
                    module_confidence:
                      type: object
                      description: When multiple search options were specified, the API service returns the confidence level for each search option as an object composed of key-value pairs. The search option represents the key, and the confidence level represents the value.

              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page_expired_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the page expires.
                  total_results:
                    type: integer
                    description: The total number of results.
                  next_page_id:
                    type: string
                    description: The unique identifier of the next page.
              query:
                type: string
                description: The search query you specified.
              search_options:
                type: array
                description: The search options you used.
              search_pool:
                type: object
                description: An object that contains details about the index you queried.
                properties:
                  total_count:
                    type: integer
                    description: The number of videos in the index you queried.
                  total_duration:
                    type: number
                    description: The total duration of the videos.
                  index_id:
                    type: string
                    description: The unique identifier of the index.
          example:
            search_pool:
              total_count: 13
              total_duration: 8731
              index_id: 639961c9e219c90227c371a2
            query: racing car cornering
            search_options:
            - conversation
            - visual
            conversation_option: semantic
            data:
            - score: 85.75
              start: 238.75
              end: 259.62109375
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/239.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=ded5986fa30922e264a1e5fd64d1d0e216778d204645b2fdfb2cea765d297d5c
              module_confidence:
                visual: high
            - score: 85.7
              start: 392.58125
              end: 410.5
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/393.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=bd143ac27f13e7024191ae793b5ab8a1decde47d889d157e84d7be11083a64d3
              module_confidence:
                visual: high
            - score: 85.65
              start: 50.21875
              end: 64.34375
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/51.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=2cff1948607cf211a88a90dfbbe01963bab9e71a8f3e20ab8893031cc986634e
              module_confidence:
                visual: high
            - score: 85.57
              start: 0
              end: 10.46875
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/1.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=d1db854a0ed064860dba6bf2b4e2296e058c75b92d66a357b8894ff268756966
              module_confidence:
                visual: high
            - score: 85.2
              start: 69.78125
              end: 77.8125
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/70.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=0bf6e0e88e09e5c2ca3006ab395908c53d62e7631ac9118752ad254f74e1bdd0
              module_confidence:
                visual: high
            - score: 85.12
              start: 106.8125
              end: 117.8125
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/107.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=92b6ef6660e64a42a9e99a0e095033d897accfe85e9dd14a6775dbcd4a57374d
              module_confidence:
                visual: high
            - score: 85.09
              start: 620.96875
              end: 696.296875
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/621.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=1acedc58645cc95c226081bd6b115aceaaec607db8f3894138cfa9fbb58d7413
              module_confidence:
                visual: high
            - score: 85.08
              start: 31.5625
              end: 37.3125
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/32.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=e5527ad78a51e12c86d01804043dd6c7d6e2c3e82b150807045f5a82d2151c00
              module_confidence:
                visual: high
            - score: 85.08
              start: 39.96875
              end: 45.40625
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/40.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=e01ea033f592f78dfe5dff148b0964af73756467e7e35a21f4591a36fd6f66e0
              module_confidence:
                visual: high
            - score: 85.08
              start: 72.5125
              end: 99.8125
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/73.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=2ae0d7c77289993a9c4326ee3f964fbf379fbb118ab78f4dcef3b2207abfc13d
              module_confidence:
                visual: high
            page_info:
              limit_per_page: 10
              total_results: 195
              page_expired_at: '2022-12-22T13:44:03Z'
              next_page_id: b84a9a99-e1af-4927-9faa-fdde8c555d38-1
            type: search_create

    searchResultsResponsePageId:
      description: Successfully retrived the specified page of search results.
      content:
        application/json:
          schema:
            type: object
            properties:
              conversation_option:
                type: string
                description: |
                  Indicates the type of search the API performed.
              data:
                type: array
                description: An array that contains your search results. For each match found, the search engine returns the following fields.
                items:
                  type: object
                  properties:
                    score:
                      type: number
                      description: A quantitative value determined by the AI engine representing the similarity score between your search terms and the matching video fragment.
                    start:
                      type: number
                      description: Start time of the matching video fragment, expressed in seconds.
                    end:
                      type: number
                      description: End time of the matching video fragment, expressed in seconds.
                    video_id:
                      type: string
                      description: A string representing the unique identifier of the video. Once the API service indexes a video, it assigns a unique identifier. Note that this is different from the identifier of the video indexing task. To map the identifier of a video indexing task to the identifier of a video, you can use the `/indexes/tasks/:task-id/video-idendpoint`. For details, see the Retrieve a Video ID Based on a Task ID section.
                    metadata:
                      type: array
                      description: An array of objects where each object contains details about a specific type of match and has the following fields.
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: A string that indicates the type of match (`visual`, `conversation`, `text_in_video`).
                          text:
                            type: string
                            description: For `conversation` and `text_in_video`, the API returns a transcription of the spoken words or the text that matches your search query.
                    confidence:
                      type: string
                      description: |
                        A qualitative indicator measured by the internal QA team based on the value of the score field. This field can take one of the following values:
                        - `high`
                        - `medium`
                        - `low`
                        - `extremely low`
                    thumbnail_url:
                      type: string
                      description: |
                        If thumbnail generation has been enabled for this index, the API service returns a string representing the URL of the thumbnail. Note that the URL expires in one hour.
                    module_confidence:
                      type: object
                      description: When multiple search options were specified, the API service returns the confidence level for each search option as an object composed of key-value pairs. The search option represents the key, and the confidence level represents the value.

              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page_expired_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the page expires.
                  total_results:
                    type: integer
                    description: The total number of results.
                  next_page_id:
                    type: string
                    description: The unique identifier of the next page.
                  prev_page_id:
                    type: string
                    description: The unique identifier of the previous page.
              query:
                type: string
                description: The search query you specified.
              search_options:
                type: array
                description: The search options you used.
              search_pool:
                type: object
                description: An object that contains details about the index you queried.
                properties:
                  total_count:
                    type: integer
                    description: The number of videos in the index you queried.
                  total_duration:
                    type: number
                    description: The total duration of the videos.
                  index_id:
                    type: string
                    description: The unique identifier of the index.
              type: 
                type: string
                description: Describes the type of operation.
          example:
            search_pool:
              total_count: 13
              total_duration: 8731
              index_id: 639961c9e219c90227c371a2
            query: racing car cornering
            search_options:
            - conversation
            - visual
            conversation_option: semantic
            data:
            - score: 85.08
              start: 515.4375
              end: 527
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/516.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=9e991f972f8a1baa647d7460685d99e20c4a27408406a972a4baf173a10b0102
              module_confidence:
                visual: high
            - score: 85.05
              start: 11.5125
              end: 23.140625
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/12.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=cd6b29e8723d51f71823dbd01c8edd252e49a8b231aca218f844e745e6b4e83a
              module_confidence:
                visual: high
            - score: 85.05
              start: 763.7708333333334
              end: 782.0625
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/764.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=4cb4392044330b76bca5e6b167ef4c3b9e04a3bcc0ca5e1af188005edbca21b7
              module_confidence:
                visual: high
            - score: 84.95
              start: 252.2421875
              end: 278.15625
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/253.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134943Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=75ddcff5ed8f14d400e21cb211440edc986a6d0320e4538a7ab2d1df4918ea43
              module_confidence:
                visual: high
            - score: 84.95
              start: 293.75
              end: 302.47499999999997
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/294.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=0a0882611208dbbdc836090426c95deb422c34ed41a3cb0ed56b78227c51c243
              module_confidence:
                visual: high
            - score: 84.87
              start: 10.46875
              end: 39.225
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/11.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134943Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=6d66c1afa7ea46df9127133114a84fbc426cb6f07ab65e3cca0b1c311dfb23d9
              module_confidence:
                visual: high
            - score: 84.85
              start: 479.09375
              end: 596.71875
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/480.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134943Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=7d9194af02753a9c756ef3e9c87419a1b4c2d42c1d6ff81a18c5b4b190dd2f8a
              module_confidence:
                visual: high
            - score: 84.84
              start: 127.60416666666667
              end: 133.375
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/128.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=2f805542fb4a54afe358aecb74c3bed0bc5cb28aed0310dfd6f3dd695f60d925
              module_confidence:
                visual: high
            - score: 84.8
              start: 471
              end: 477.59375
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/472.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=89637e18b70d0acfffe06cf2c2f12fc392630ea8b8238cf4ab0c4ffac2bca164
              module_confidence:
                visual: high
            - score: 84.74
              start: 85.5
              end: 93.90625
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/86.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=507658ec89d016005338e7597dc70651751def947cd648dc107adde5af19d9eb
              module_confidence:
                visual: high
            page_info:
              limit_per_page: 10
              total_results: 195
              page_expired_at: '2022-12-22T13:49:44Z'
              next_page_id: cdfb7ca8-9316-4518-af82-8cadbe934474-2
              prev_page_id: cdfb7ca8-9316-4518-af82-8cadbe934474-0
            type: search_create_token




    retrieveTranscriptionResponse:
      description: Transcription has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: The unique identifier of the video.
              data:
                type: array
                description: An array of objects that contains the transcription. For each time range for which the API service finds spoken words, it returns an object that contains the fields below. If the API service doesn't find any spoken words, the data field is set to `None`.
                items:
                  type: object
                  properties:
                    start:
                      type: number
                      description: The start of the time range, expressed in seconds.
                    end:
                      type: number
                      description: The end of the time range, expressed in seconds.
                    value:
                      type: string
                      description: Text representing the spoken words within this time range.
              index_id:
                type: string
                description: The unique identifier of the index with which the video is associated.
              type:
                type: string
                description: Describes the type of operation.
          example:
            _id: 61e17c1c777e6caec646fa08
            data:
              - end: 8.86
                start: 4.34
                value: 'Hello?'
              - end: 10.95
                start: 9.56
                value: ' Yeah,'
            index_id: 61e165b061c43d6d9b73627b
            type: video_index_transcription

    retrieveOcrResponse:
      description: OCRs have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: The unique identifier of the video.
              data:
                type: array
                description: |
                  An array that contains the OCR elements. For each time range for which the API service finds OCR elements, it returns an object that contains the fields below.
                  If the API service doesn't find any OCR elements, the `data` field is set to `None`.
                items:
                  type: object
                  properties:
                    start:
                      description: 'The start of the time range, expressed in seconds.'
                      type: number
                    end:
                      description: 'The end of the time range, expressed in seconds.'
                      type: number
                    value:
                      description: |
                        Recognized text within this time range.
                      type: string
              index_id:
                type: string
                description: The unique identifier of the index with which the video is associated.
                example: 61e165b061c43d6d9b73627b
              type:
                type: string
                description: Describes the type of operation.
                example: video_index_meta_text_in_video
          example:
            _id: 61e17c1c777e6caec646fa08
            data:
              - start: 22
                end: 42
                value: LIVE
              - start: 23
                end: 24
                value: VISITE SAO PAULO
              - start: 23
                end: 24
                value: TED KRAVITZ
            index_id: 61e165b061c43d6d9b73627b
            type: video_index_meta_text_in_video

    getVideoVectorsResponse:
      description: The video information associated with the specified index have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to `page_limit` videos.
                items:
                  $ref: '#/components/schemas/videoVector'
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page:
                    type: integer
                    description: The page you retrieved.
                  total_page:
                    type: integer
                    description: The total number of pages.
                  total_results:
                    type: integer
                    description: The total number of results.
              type:
                type: string
                description: Describes the type of operation.
                example: video_index_list

            example:
              data:
                - _id: 62a17bf847f5678267ec10cc
                  created_at: '2022-06-09T04:50:00.879Z'
                  estimated_time: '2022-06-09T04:55:53.746Z'
                  index_id: 62a0906d47f5678267ec10a6
                  metadata:
                    duration: 531.998133
                    filename: 01.mp4
                    height: 400
                    width: 854
                  status: ready
                  updated_at: '2022-06-09T04:55:57.256Z'
                - _id: 62a17bce47f5678267ec10c6
                  created_at: '2022-06-09T04:49:20.001Z'
                  estimated_time: '2022-06-09T04:53:59.772Z'
                  index_id: 62a0906d47f5678267ec10a6
                  metadata:
                    duration: 741.875
                    filename: 02.mp4
                    height: 480
                    width: 854
                  status: ready
                  updated_at: '2022-06-09T04:54:10.345Z'
              page_info:
                limit_per_page: 10
                page: 1
                total_page: 1
                total_results: 2
              type: index_task_list
    
    deleteVideoIndexingTask:
      description: The specified video indexing task has successfully been deleted. If successful, this method does not return anything in the response body.

    getVideoVectorIdResponse:
      description: The corresponding video ID has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: A string representing the ID of the video. The API returns this field only when the value of the `status` field is `ready`.
              exist:
                type: boolean
                description: A boolean specifying whether the video is ready to be searched. The API service returns `true` when the value of the status field is `ready` and `false` otherwise.
              type:
                type: string
                description: Describes the type of operation.
            example:
              _id: 629dea98f05c91527bc5c1c8
              exist: true
              type: index_task_video_id
    getVideoVectorResponse:
      description: The specified video information has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id: 
                type: string
                description: The unique identifier of the video.
              created_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
              updated_at: 
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the corresponding video indexing task was last updated. The API service updates this field every time the corresponding video indexing task transitions to a different state.
              indexed_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video has finished indexing.
              metadata:
                type: object
                description: An object that contains the information about the video.
                properties:
                  duration:
                    type: number
                  filename:
                    type: string
                  fps:
                    type: number
                  height:
                    type: integer
                  width:
                    type: integer
              type:
                type: string
                description: Describes the type of operation.
            example:
              _id: 61e17be5777e6caec646fa07
              created_at: 2022-01-14T13:34:29Z
              updated_at: 2022-01-14T13:34:29Z
              indexed_at: 2022-01-14T14:05:55Z
              metadata:
                duration: 3747.841667
                filename: IOKgzkakhlk.mp4
                fps: 29.97002997002997
                height: 360
                width: 482
              type: video_index_item

    getIndexResponse:
      description: The specified index has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: object
                description: An object that contains an `index` object.
                properties:
                  _id:
                    type: string
                    description: A string representing the unique identifier of the index. It is assigned by the API when an index is created.
                  created_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was created.
                  updated_at:
                    type: string
                    description: |
                      A string representing the date and time, in the  [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was updated.
                  engine_id:
                    type: string
                    description: A string representing the unique identifier of the engine that the API will use to index the videos in this index.
                  index_name:
                    type: string
                    description: A string representing the name of the index.
                  index_options:
                    type: array
                    description: |
                      An array of strings that determines how the engine processes your videos.
                      
                      Twelve Labs currently offers three different indexing options: `visual`, `conversation`, and `text_in_video`. For more details, see the [Indexing options](/docs/concepts-indexing-options) page.

                      **NOTES**:
                      - The indexing options cannot be changed once the index has been created.
                      - The types of searches you can perform on this index are a subset of the indexing options.
                  total_duration:
                    type: number
                    description: A number representing the total duration, in seconds, of the videos in the index.
                  addons:
                    type: array
                    description: |
                      The list of add-ons that are enabled for this index.
                    items:
                      type: string
              type:
                type: string
                description: Describes the type of operation.
          example:
            data:
              _id: 62d9bafa90077fc60af827a0
              index_name: myIndex
              index_options:
                - visual
                - text_in_video
                - conversation
              created_at: 2022-07-04T13:58:39.262Z
              updated_at: 2022-07-05T11:11:32.026Z
              engine_id: marengo2
              video_count: 12
              total_duration: 8716.8969
              addons:
                - thumbnail
            type: get_index
    getVideoIndexingTasksResponse:
      description: The video indexing tasks have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to `page_limit` tasks.
                items:
                  $ref: '#/components/schemas/videoIndexingTask'
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page:
                    type: integer
                    description: The page you retrieved.
                  total_page:
                    type: integer
                    description: The total number of pages.
                  total_results:
                    type: integer
                    description: The total number of results.
              type:
                type: string
                description: Describes the type of operation.
          example:
            data:
              - _id: 62a17bf847f5678267ec10cc
                created_at: '2022-06-09T04:50:00.879Z'
                estimated_time: '2022-06-09T04:55:53.746Z'
                index_id: 62a0906d47f5678267ec10a6
                metadata:
                  duration: 531.998133
                  filename: 01.mp4
                  height: 400
                  width: 854
                status: ready
                updated_at: '2022-06-09T04:55:57.256Z'
              - _id: 62a17bce47f5678267ec10c6
                created_at: '2022-06-09T04:49:20.001Z'
                estimated_time: '2022-06-09T04:53:59.772Z'
                index_id: 62a0906d47f5678267ec10a6
                metadata:
                  duration: 741.875
                  filename: 02.mp4
                  height: 480
                  width: 854
                status: ready
                updated_at: '2022-06-09T04:54:10.345Z'
            page_info:
              limit_per_page: 10
              page: 1
              total_page: 1
              total_results: 2
            type: index_task_list



    getVideoIndexingTaskResponse:
      description: The specified video indexing task has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: The unique identifier of the video indexing task.
              created_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the task object has been created.
              updated_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
              estimated_time:
                type: string
                description: A string indicating the estimated date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video is ready to be searched.
              index_id:
                type: string
                description: A string pointing to the index to which the video is assigned.
              metadata:
                type: object
                description: An object that contains details about the video.
                properties:
                  duration:
                    type: number
                  filename:
                    type: string
                  height:
                    type: integer
                  width:
                    type: integer
              status:
                type: string
                description: A string indicating the status of the video indexing task.
              type:
                type: string
                description: Describes the type of operation.
          example:
            _id: 61e1789761c43d6d9b7362f3
            created_at: 2022-01-14T13:20:22.986Z
            updated_at: 2022-01-17T08:35:21.639Z
            estimated_time: 2022-01-14T14:18:52.175Z
            index_id: 61e165b061c43d6d9b73627b
            metadata:
              duration: 4334.0297
              filename: WPK3hvTr8PU.mp4
              height: 360
              width: 544
            status: indexing
            type: index_task_item



    getIndexesResponse:
      description: The indexes have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to `page_limit` indexes.
                items:
                  $ref: '#/components/schemas/index'
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    description: The maximum number of items on each page.
                    type: integer
                  page:
                    description: The page you retrieved.
                    type: integer
                  total_page:
                    description: The total number of pages.
                    type: integer
                  total_results:
                    description: The total number of results. 
                    type: integer
              type:
                type: string
                description: Describes the type of operation.
            example:
              data:
                - _id: 62d85fe7340fa665f1fda5dd
                  index_name: index-01
                  index_options:
                    - visual
                    - conversation
                    - text_in_video
                  created_at: '2022-07-20T20:04:55.776Z'
                  updated_at: '2022-07-20T20:04:55.776Z'
                  engine_id: marengo2
                  video_count: 2
                  total_duration: 1363.76
                  addons: 
                    - thumbnail
                - _id: 62d858ee340fa665f1fda5d8
                  index_name: index-02
                  index_options:
                    - visual
                    - conversation
                    - text_in_video
                  created_at: '2022-07-20T19:35:10.385Z'
                  updated_at: '2022-07-20T19:35:10.385Z'
                  engine_id: marengo2
                  video_count: 1
                  total_duration: 579.12
                  addons:
                    - thumbnail
              page_info:
                limit_per_page: 10
                page: 1
                total_page: 1
                total_results: 2
              type: index_list

    deleteVideoVectorResponse:
      description: The specified video information has successfully been deleted.
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                description: |
                  A human-readable string describing the result.
              type:
                type: string
                description: |
                  Describes the type of operation.
          example:
            message: Succesfully deleted video index '61dea7ed6c20ec075ebba8f5'.
            type: delete_video_index
    deleteIndexResponse:
      description: The specified index has successfully been deleted.
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                description: A human-readable string describing the result.
                example: Successfully deleted index 'myIndex'.
              type:
                type: string
                description: Describes the type of operation.
                example: index_delete
    createVideoIndexingTaskResponse:
      description: A video indexing task has successfully been created.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: A string representing the unique identifier of the `task` object.
              message:
                type: string
                description: A human-readable string describing the result.
              type:
                type: string
                description: Describes the type of operation.
          example:
            _id: 62a1ec6d9ea24f052b971a0f
            message: Succesfully requested indexing tasks.
            type: index_task_create
    getEngineResponse:
      description: The specified engine has successfully been retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/engine'
    getEnginesResponse:
      description: The search engines have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains the `engine` objects.
                items:
                  $ref: '#/components/schemas/engine'
              type:
                type: string
                description: Describes the type of operation.
            example:
                - _id: marengo
                  allowed_index_options:
                    - visual
                    - text_in_video
                    - conversation
                  author: twelve_labs
                  created_at: '2022-07-24 09:30:52.683 +0000 UTC'
                  finetune: false
                  ready: true
                  type: engine
                  updated_at: '2022-07-24 09:30:52.683 +0000 UTC'
                - _id: marengo2
                  allowed_index_options:
                    - visual
                    - text_in_video
                    - conversation
                  author: twelve_labs
                  created_at: '2022-07-24 09:30:52.686 +0000 UTC'
                  finetune: false
                  ready: true
                  type: engine
                  updated_at: '2022-07-24 09:30:52.686 +0000 UTC'
                - type: engine_list
                
    createIndexResponse:
      description: An index has successfully been created
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: Represents the unique identifier of the `index` object.
              message:
                type: string
                description: A human-readable string describing the result.
              type:
                type: string
                description: Describes the type of operation.
            example:
              _id: 62d85fe7340fa665f1fda5dd
              message: Succesfully created index 'myIndex' index.
              type: index_create
    
    retrieveTasksInEachStatus:
      description: |
        The number of video indexing tasks in each status has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: object
                description: |
                  An object containing the number video indexing tasks in each status.
                properties:
                  index_id:
                    type: string
                    description: The unique identifier of the index.
                  ready:
                    type: integer
                    description: A value indicating the number of video indexing tasks for which the status is `ready`.
                  validating:
                    type: integer
                    description: A value indicating the number of video indexing tasks for which the status is `validating`.
                  pending:
                    type: integer
                    description:  A value indicating the number of video indexing tasks for which the status is `pending`.
                  failed:
                    type: integer
                    description: A value indicating the number of video indexing tasks for which the status is `failed`.
                  total:
                    type: integer
                    description: A value indicating the total number of video indexing tasks in the specified index.
              type:
                type: string
                description: |
                  Describes the type of operation.
          example:
            data:
              index_id: 635be12062c8def3b96b2616
              ready: 7
              validating: 2
              pending: 0
              indexing: 1
              failed: 0
              total_result: 10
            type: index_task_get_status
    retrieveThumbnailResponse:
      description: A thumbnail has successfully been retrieved.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                description: |
                  An object that contains the thumbnail.
                properties:
                  thumbnail:
                    type: string
                    description: |
                      A string representing the URL of the thumbnail. Note that the URL expires in one hour.
              type:
                type: string
                description: |
                  Describes the type of operation.
          example:
            data:
              thumbnail: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6320748774fed2f3511f2a92/10.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20220914%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220914T075213Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=46b3bac13fb8b022313244780c238cb6bfc53eddcbee3be23a8d2dd22d99543e
              type: get_video_thumbnail

    updateVideoVectorResponse:
      description: If successful, this method returns `204 No Content` response code. It does not return anything in the response body.

##################
###   Errors   ###
##################

    searchResultsError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 104
            message: The conversation option of transcription is not allowed with multiple search options. You should use semantic instead.

    retrieveThumbnailError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 6320748774fed2f3511f2a921 does not exist

    retrieveTranscriptionError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 629deb6ff05c91527bc5c1c91 does not exist

    retrieveOcrError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 629deb89f05c91527bc5c1ca0 does not exist

    deleteVideoVectorError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 629deb6ff05c91527bc5c1c91 does not exist'

    updateVideoVectorError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: parameter_invalid
            message: 'The following parameters are invalid: metadata.duration. These fields are not allowed to modify. Please remove these fields from request body and try again.'

    getVideoVectorError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 637f21e98f7a293c9d4f62541 does not exist
    
    getVideoVectorsError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 62a026ff9ea24f052b9719ce0 does not exist

    cloudToCloudTransferError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 300
            message: 'Failed to create indexing task. Reason: Failed to parse video task json'

    retrieveTasksInEachStatusError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code": 201
            message: ID 16349136f327fbb9c801754c2 does not exist

    getVideoVectorIdError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 629dea939ea24f052b971991a does not exist

    deleteVideoIndexingTaskError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            message: status 3 task cannot be deleted


    getVideoIndexingTaskError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 629dea939ea24f052b9719910 does not exist

    getVideoIndexingTasksError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 104
            message: page_limit must be greater than 0 and less than or equal to 50


    createVideoIndexingTaskError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 601
            message: Insufficient funds

    deleteIndexError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 6283aa51f18e21febd160bc01 does not exit

    updateIndexError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 6283aa51f18e21febd160bc01 does not exit

    getIndexError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID 6283aa51f18e21febd160bc01 does not exit
        
    getIndexesError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 107
            message: There is no content

    createIndexError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 104
            message: Invalid parameter values for index options. Allowed values for index options are [text_in_video, conversation, visual]}

    getEngineError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 201
            message: ID marego does not exist


    genericError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
      

##########################
###   Request Bodies   ###
##########################

  requestBodies:

    update-video-vector:
      content:
        application/json:
          schema:
            type: object
            properties:
              video_title:
                type: string
                description: |
                  Specifies the new name of the video
              metadata:
                type: object
                description: |
                  Metadata that helps you categorize your videos. You can specify a list of keys and values. Keys must be of type `string`, and values can be of the following types: `string`, `integer`, `float` or `boolean`.

                  **NOTES:**
                  -  If you want to store other types of data such as objects or arrays,  you must convert your data into string values.
                  - You cannot override any of the predefined metadata (example: duration, width, length, etc) associated with a video.
                additionalProperties: {}

    search:
      content:
        application/json:
          schema:
            required:
              - query
              - index_id
            type: object
            properties:
              query:
                type: string
                description: |
                  Your search query. Note that the API supports full natural language-based search. The following examples are valid queries: "birds flying near a castle", "sun shining on water", "chickens on the road", "an officer holding a child's hand.", "crowd cheering in the stadium."
              index_id:
                type: string
                description: |
                  The unique identifier of the index to search.
              search_options:
                type: array
                items:
                  type: string
                minItems: 1
                maxItems: 3
                example:
                  - visual
                  - conversation
                  - text_in_video
                default:
                  - visual
                  - conversation
                  - text_in_video
                description: |
                  Search options specify the source of information the API service uses when performing a search. The following values are supported:
                  - `visual`: Allows you to search by objects, actions, sound, movements, places, situational events, and complex audio-visual text descriptions.
                  - `conversation`: Allows you to find the exact point in your video where the specified word or phrase is mentioned.
                  - `text_in_video`: Allows you to search for text that appears in your videos (OCR).

                  The search options you specify must be a subset of the indexing options used when you created the index.
                  You can specify multiple search options in conjunction with the `operator` parameter described below to broaden or narrow your search.
              operator:
                type: string
                example: or
                default: or
                description: |
                  When you specify more than one search option, you can use this parameter to indicate the logical operation that the API service should perform.
                    
                    The following logical operators are supported:
                    
                    - `or`: The API returns the results for which any search option matches.
                    
                    - `and`: The API returns only the results for which all search options match.

                    For details and examples, see the [Multiple search options](/docs/guides-multiple-search-options) page.

                    
                    **Default**: `or`.
              conversation_option:
                type: string
                enum:
                  - semantic
                  - transcription
                default: semantic
                description: |
                  Specifies the type of search the API service will perform. The following values are supported:
                  - `semantic`:  When using this value, the API service determines the meaning of a search query, rather than just matching the keywords you've specified to the content of your videos. Use this value when understanding the meaning of language and the relationships between different concepts and entities is required.
                  - `transcription`: When using this value, the API service identifies the moments in your videos when the keywords or phrases you've specified are present. Use this value when the API service should return only the exact matches. Note that `transcription` can only be used with a single search option. For example, you cannot set the `search_option parameter` to equal `["visual", "conversation", "text_in_video"]` and the `conversation_option` parameter to equal `transcription`.

                  **Default**: `semantic`. 
              page_limit:
                type: integer
                description: |
                  The number of items to return on each page.

                  **Default**: `10`.

                  **Max**: `50`.
              filter:
                type: object
                description: |
                  For string fields, the filter `parameter` returns only the results that equal the value you specify. The following example filters on the videos whose title is "Animal Encounters part 1": `"title": "Animal Encounters part 1"`.
                  For numeric fields, the `filter` parameter returns the results that match based on the arithmetic comparison. The following example filters on the videos whose height is greater than or equal to 400 and less than or equal to 500: `"height": { "gte": 400, "lte": 500 }`.

                  You can also filter by any of the custom fields specified by invoking the `PUT` method of the `/indexes/:index-id/videos/:video-id` endpoint.  The following example returns only the videos for which a custom field named `needsReview` of type `boolean` is set to `true`: `"needs_review": true`.

                  For more details and examples, see the [Filter search results based on metadata](/docs/concepts-filtering-search-results) page.
                properties:
                  id:
                    type: array
                    description: An array of strings that restricts your search results based on the specified video IDs.
                    items:
                      type: string
                  duration:
                    type: number
                    description: 'A numeric field that restricts your search results based on duration, expressed in seconds.'
                  width:
                    type: number
                    description: A numeric field that restricts your search results based on width.
                  height:
                    type: number
                    description: A numeric field that restricts your search results based on height.
                  size:
                    type: number
                    description: 'A numeric field that restricts your search results based on size, expressed in bytes.'
                  title:
                    type: string
                    description: A string field that restricts your search results based on the title of the video.
                additionalProperties: {}

    cloud-to-cloud-transfer:
      content:
        multipart/form-data:
          schema:
            required:
              - file
            type: object
            properties:
              file:
                description: |
                  A JSON file that contains a list. Each element of the list is an object representing a file to be uploaded and indexed and has the following fields:

                  - `index_id`: The unique identifier of the index with which the video file will be associated.
                  - `language`: The language of your video.
                  - `object`: The S3 URL of your video.
                  - _(Optional)_ `transcription`: The S3 URL of your transcription.

                  **Example:**
                  ```
                  [
                    {
                      "index_id": "6298d673f1090f1100476d4c",
                      "language": "en",
                      "object": "s3://twelve-labs-docs/01.mp4",
                      "transcription": "s3://twelve-labs-docs/01.srt"
                    },
                    {
                      "index_id": "6298d673f1090f1100476d4c",
                      "language": "en",
                      "object": "s3://twelve-labs-docs/02.mp4",
                      "transcription": "s3://twelve-labs-docs/02.srt"
                    }
                  ]
                  ```
                type: string
                format: binary
    createVideoIndexingTask:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - index_id
            properties:
              index_id:
                type: string
                description: |
                  The unique identifier of the index to which the video is being uploaded.
              provide_transcription:
                type: boolean
                default: false
                description: |
                  A boolean value specifying whether or not you provide a transcription for this video.
              language:
                type: string
                default: en
                description: Must be set to `en`.
              video_file:
                type: string
                format: binary
                description: |
                  Specify this parameter to upload a video from your local file system.
              transcription_file:
                type: string
                format: binary
                description: |
                  When the `provide_transcription` parameter is set to `true`, and you want to provide a transcription from the local file system, use the `transcription_file` parameter to pass your transcription file to the API service. It must be a stream of bytes encoded as `multipart/form-data`. The transcription must be in the SRT or VTT format.
              video_url:
                type: string
                description: |
                  Specify this parameter to upload a video from a publicly accessible URL.
              transcription_url:
                type: string
                description: |
                  When the `provide_transcription` parameter is set to `true`, and you want to provide a transcription from a publicly accessible URL, use the `transcription_url` parameter to specify the URL of your transcription. The transcription must be in the SRT or VTT format.
    updateIndex:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              index_name:
                type: string
                description: |
                  The name of the index.
    createIndex:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - engine_id
                - index_options
                - index_name
              properties:
                engine_id:
                  type: string
                  description: |
                    Specifies the search engine. The following options are available:
                      - `marengo2`
                      
                      - `marengo`

                    **NOTES**:

                      - Twelve Labs strongly recommends you use `marengo2`.

                      - You cannot change the engine once the index has been created.
                  default: marengo2
                index_options:
                  type: array
                  description: |
                    Must be a subset of `["visual", "conversation", "text_in_video"]`.
                  items:
                    type: string
                  minItems: 1
                  maxItems: 3
                  default:
                    - visual
                    - conversation
                    - text_in_video
                index_name:
                  type: string
                  default: myIndex
                  description: |
                    The name of the index. Make sure you use a succinct and descriptive name.
                addons:
                  type: array
                  default:
                    - thumbnail
                  description: |
                    The list of add-ons that are enabled for this index. To enable thumbnail generation for an index, set this parameter to `["thumbnail"]`.

                    **NOTE**:
                    - You cannot disable thumbnails once the index has been created.
                  items:
                    type: string
            example:
              engine_id: marengo2
              index_options:
                - visual
                - conversation
                - text_in_video
              index_name: myIndex
              addons:
                - thumbnail
