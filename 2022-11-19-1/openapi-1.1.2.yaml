x-readme:
  samples-languages:
    - "http"
    - "curl"
    - "python"
    - "go"
    - "node"
openapi: 3.1.0
info:
  title: Twelve Labs Video Understanding API
  description: |
    Use the Twelve Labs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses.
  contact:
    name: Twelve Labs Support
    email: support@twelvelabs.io
  version: 1.1.2
servers:
  - url: 'https://api.twelvelabs.io'

################
###   Tags   ###
################

tags:
  - name: Engines
  - name: Indexes
  - name: Indexes/Videos
  - name: Tasks    
  - name: Tasks/Transfers
  - name: Search
  - name: Combined queries
  - name: Classify


paths:

###################
###   Engines   ###
###################

  '/v1.1/engines':
    summary:  Engines
    get:
      summary: List engines
      description: This method lists all the engines that are available in your account.
      operationId: list-engines
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/components/responses/getEnginesResponse'
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/engines/{engine-id}':
    get:
      summary: Retrieve an engine
      description: This method retrieves an engine.
      operationId: retrieve-engine
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: engine-id
          in: path
          description: |
            The identifier of the engine to retrieve.
            
            The following engines are available:
            - `marengo2`
            - `marengo`
            For details about the features of each engine, see the [Engines](/docs/concepts-engines) page.
          required: true
          schema:
            type: string
            example: marengo2
      responses:
        '200':
          $ref: '#/components/responses/getEngineResponse'
        '404':
          $ref: '#/components/responses/notFound'

#################
###   Tasks   ###
#################

  /v1.1/tasks:
    post:
      summary: Create a video indexing task
      description: |
        Use this method to create a new video indexing task that uploads a video to the API service and makes it searchable. Note the following about creating a new video indexing task:
        - To upload a file that resides on the local file system, pass the `video_file` parameter. It must be a stream of bytes encoded as `multipart/form-data`.
        - To upload a file from a publicly accessible URL, pass the `video_url` parameter with the URL of your video. It must be a `string`.
        - You must specify at least one of the `video_file` and `video_url` parameters. If you specify both the `video_url` and `video_file` parameters in the same request, the `video_url` parameter takes precedence over `video_file`.
        - To provide a transcription file, you must set the `provide_transcription` parameter to `true` and specify at least one of the `transcription_file` and `transcription_url` parameters:
          - Use the `transcription_file` parameter to provide a transcription from the local file system. It must be a stream of bytes encoded as `multipart/form-data`.
          - Use the `transcription_url` parameter to provide a transcription file from a publicly accessible URL. It must be a `string`.
      operationId: create-video-indexing-task
      tags:
        - Tasks
      requestBody:
        $ref: '#/components/requestBodies/createVideoIndexingTask'
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: Content-Type
          in: header
          description: Must be set to `multipart/form-data`.
          required: true
          schema:
            type: string
            default: multipart/form-data
      responses:
        '200':
          $ref: '#/components/responses/createVideoIndexingTaskResponse'
        '400':
          $ref: '#/components/responses/genericError'
    
    get:
      summary: List video indexing tasks
      description: This method returns a list of the video indexing tasks in your account. The API returns your video indexing tasks sorted by creation date, with the newest at the top of the list.
      operationId: list-video-indexing-tasks
      tags:
        - Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - $ref: '#/components/parameters/_id'
        - $ref: '#/components/parameters/index_id'
        - $ref: '#/components/parameters/filename'
        - $ref: '#/components/parameters/duration'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/height'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/estimated_time'

      responses:
        '200':
          $ref: '#/components/responses/getVideoIndexingTasksResponse'
        '400':
          $ref: '#/components/responses/genericError'
  
  '/v1.1/tasks/{task_id}':
    get:
      summary: Retrieve a video indexing task
      description: This method retrieves a video indexing task.
      operationId: retrieve-video-indexing-task
      tags:
        - Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: task_id
          in: path
          description: |
            The unique identifier of the video indexing task to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoIndexingTaskResponse'
        '400':
          $ref: '#/components/responses/genericError'
    delete:
      summary: Delete a video indexing task
      description: |
        This action cannot be undone.
        Note the following about deleting a video indexing task:
        - You can only delete video indexing tasks for which the status is `ready` or `failed`.
        - If the status of your video indexing task is `ready`, you must first delete the video vector associated with your video indexing task by calling the `DELETE` method of the `/indexes/videos` endpoint.
      operationId: delete-video-indexing-task
      tags:
        - Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: task_id
          in: path
          description: |
            The unique identifier of the video indexing task you want to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            If successful, this method returns `204 No Content` response code. It does not return anything in the response body.
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/tasks/status':
    get:
      summary: Retrieve tasks by status
      description: This method retrieves the number video indexing tasks in each status for the specified index.
      operationId: video-indexing-tasks-by-status
      tags:
        - Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index_id
          in: query
          description: The unique identifier of the index for which you want to retrieve the number video indexing tasks in each status.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/retrieveSummaryVideoIndexingTaskResponse'
        '400':
          $ref: '#/components/responses/genericError'
  
  ###########################
  ###   Tasks/Transfers   ###
  ###########################

  '/v1.1/tasks/transfers':
    post:
      summary: Make a cloud-to-cloud transfer
      description: |
        This method makes a cloud-to-cloud transfer.
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: Content-Type
          in: header
          description: Must be set to `multipart/form-data`.
          required: true
          schema:
            type: string
            enum:
              - multipart/form-data
      operationId: cloud-to-cloud-transfer
      tags:
        - Tasks/Transfers
      requestBody:
        $ref: '#/components/requestBodies/cloud-to-cloud-transfer'
      responses:
        '200':
          $ref: '#/components/responses/cloudToCloudTransferResponse'
        '400':
          $ref: '#/components/responses/genericError'


###################
###   Indexes   ###
###################

  '/v1.1/indexes':
    post:
      summary: Create an index
      description: This method creates an index.
      operationId: create-index
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/createIndex'
      responses:
        '201':
          $ref: '#/components/responses/createIndexResponse'
        '400':
          $ref: '#/components/responses/genericError'
    get:
      summary: List indexes
      description: 'This method returns a list of the indexes in your account. The API returns indexes sorted by creation date, with the oldest indexes at the top of the list.'
      operationId: list-indexes
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: _id
          in: query
          description: Filter by the unique identifier of an index.
          required: false
          schema:
            type: string
        - name: index_name
          in: query
          description: Filter by the name of an index.
          required: false
          schema:
            type: string
        - name: index_options
          in: query
          description: |
            Filter by the indexing options. When filtering multiple indexing options, the values must be comma-separated.
          required: false
          schema:
            type: string
          example: index_options=visual,conversation
      responses:
        '200':
          $ref: '#/components/responses/getIndexesResponse'
        '400':
          $ref: '#/components/responses/genericError'
  
  '/v1.1/indexes/{index-id}':
    get:
      summary: Retrieve an index
      description: This method retrieves details about the specified index.
      operationId: retrieve-index
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getIndexResponse'
        '400':
          $ref: '#/components/responses/genericError'
    put:
      summary: Update an index
      description: This method updates the name of the specified index.
      operationId: update-index
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to update.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/updateIndex'
      responses:
        '200':
          $ref: '#/components/responses/updateIndexResponse'
        '400':
          $ref: '#/components/responses/genericError'
    delete:
      summary: Delete an index
      description: This method deletes the specified index and all the videos within it. This action cannot be undone.
      operationId: delete-index
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/deleteIndexResponse'
        '400':
          $ref: '#/components/responses/genericError'

##########################
###   indexes/videos   ###
##########################

  '/v1.1/indexes/{index-id}/videos':
    get:
      summary: List videos
      operationId: list-videos
      description: |
        This method returns a list of the videos in the specified index. If no parameters are specified, the API returns your videos sorted by creation date, with the newest at the top of the list.
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: index-id
          in: path
          description: The unique identifier of the index for which the API will retrieve the videos.
          schema:
            type: string
          required: true
        - name: _id
          in: query
          description: |
            Filter by the unique identifier of a video index.
          required: false
          schema:
            type: string
        - name: filename
          in: query
          description: |
            Filter by filename.
          required: false
          schema:
            type: string
        - name: duration
          in: query
          description: |
            Filter by duration. Expressed in seconds.
          schema:
            type: number
        - name: fps
          in: query
          description: |
            Filter by frames per second.
          required: false
          schema:
            type: number
        - name: width
          in: query
          description: |
            Filter by width.
          required: false
          schema:
            type: number
        - name: height
          in: query
          description: |
            Filter by height.
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: |
            Filter by size. Expressed in bytes.
          required: false
          schema:
            type: number
        - name: created_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
          required: false
          schema:
            type: string
        - name: updated_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was updated.
          required: false
          schema:
            type: string
        - name: indexed_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video has finished indexing.
          required: false
          schema:
            type: string

        - name: metadata # Arbitrary name that won't be included in the request URL.
          in: query
          description: |
            You can filter by any of the custom fields specified by invoking the `PUT` method of the `/indexes/:index-id/videos/:video-id` method.

            Examples:
            - To filter on a string: `?category=recentlyAdded`
            - To filter on an integer: `?batchNumber=5`
            - To filter on a float: `?rating=9.3`
            - To filter on a boolean: `?needsReview=true`
          schema:
            type: object
            propertyNames:
              pattern: '^[A-Za-z][A-Za-z0-9]*$'  # Parameter names
            additionalProperties:
              pattern: '^[A-Za-z][A-Za-z0-9]*$'
          style: form
          explode: true

      responses:
        '200':
          $ref: '#/components/responses/getVideoVectorsResponse'
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/indexes/{index-id}/videos/{video-id}':
    get:
      summary: Retrieve video information
      description: This method retrieves information about the specified video.
      operationId: retrieve-video-information
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index to which the video has been uploaded.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoVectorResponse'
        '400':
          $ref: '#/components/responses/genericError'
    put:
      summary: Update video information
      description: Use this method to update the title and the metadata of a video.
      operationId: update-video-information
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index to which the video has been uploaded.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video to update.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/update-video-vector'

      responses:
        '200':
          $ref: '#/components/responses/updateVideoVectorResponse'
        '400':
          $ref: '#/components/responses/genericError'
    delete:
      summary: Delete video information
      operationId: delete-video-information
      tags:
        - Indexes/Videos
      description: |
        This method deletes all the information about the specified video This action cannot be undone.
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index to which the video has been uploaded.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/deleteVideoVectorResponse'
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/indexes/{index-id}/videos/{video-id}/transcription':
    get:
      summary: Retrieve a transcription
      description: This method retrieves a transcription of the spoken words.
      operationId: retrieve-transcription
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index to which the video has been uploaded.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video for which you want to retrieve a transcription.
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: |
            The start of the time range (in seconds) to retrieve transcription for.
          required: false
          schema:
            type: number
        - name: end
          in: query
          description: |
            The end of the time range (in seconds) to retrieve transcription for.
          required: false
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/retrieveTranscriptionResponse'
        '400':
          $ref: '#/components/responses/genericError'


  '/v1.1/indexes/{index-id}/videos/{video-id}/text-in-video':
    get:
      summary: Retrieve text recognized in video (OCR)
      description: This method retrieves text recognized in video (OCR).
      operationId: retrieve-ocr
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index to which the video has been uploaded.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video.
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: |
            The start of the time range (in seconds) to retrieve OCRs for.
          required: false
          schema:
            type: number
        - name: end
          in: query
          description: |
            The end of the time range (in seconds) to retrieve OCRs for.
          required: false
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/retrieveOcrResponse'
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/indexes/{index_id}/videos/{video_id}/thumbnail':
    get:
      summary: Retrieve a thumbnail
      description: To use this feature, you must enable thumbnail generation for the index to which the video has been uploaded. For details, see the [Create an index](/reference/createindex) section.
      operationId: retrieve-thumbnail
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index_id
          in: path
          description: |
            The unique identifier of the index to which the video has been uploaded.
          required: true
          schema:
            type: string
        - name: video_id
          in: path
          description: |
            The unique identifier of the video from which you want to retrieve a thumbnail.
          required: true
          schema:
            type: string
        - name: time
          in: query
          description: |
            Specifies the time, in seconds, at which the API service must retrieve the thumbnail. If you don't specify this parameter, the API service retrieves a thumbnail from the middle of the video.
          required: false
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/retrieveThumbnailResponse'
        '400':
          $ref: '#/components/responses/genericError'

##################
###   Search   ###
##################

  '/v1.1/search':
    post:
      summary: Make a search request
      tags:
        - Search
      description: |
        Use the POST method of the `/search` endpoint to search for relevant matches in an index.
        
        This method returns the first page of results. To retrieve the subsequent pages, you must call the GET method of the `/search/{page-token}` endpoint, passing it the unique identifier of the page you want to retrieve.

        **NOTES**:
          - This method has a rate limit of 1 call per second for each API key. If the limit is reached, the API service returns an `HTTP 429 - Too Many Requests` error response.
          - When you use pagination, you will not be charged for retrieving subsequent pages of results.
      operationId: make-search-request
      requestBody:
        $ref: '#/components/requestBodies/search'
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/components/responses/searchResultsResponse'
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/search/{page-token}':
    get:
      summary: Retrieve a specific page of search results
      tags:
        - Search
      description: |
        Use this endpoint to retrieve a specific page of search results.

        **NOTE**: When you use pagination, you will not be charged for retrieving subsequent pages of results.
      operationId: search-retrieve-specific-page
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: page-token
          in: path
          required: true
          description: |
            A token that identifies the page to retrieve.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/searchResultsResponsePageId'
        '400':
          $ref: '#/components/responses/searchResultsError'

#################################
###   Search - beta   ###
#################################

  '/v1.1/beta/search':
    post:
      x-readme:
        explorer-enabled: false
      summary: Make a search request
      operationId: combined-queries-make-search-request
      tags:
        - Combined queries
      description: |
        Use the POST method of the `/beta/search` endpoint to search for relevant matches in an index using combined queries.
        
        This method returns the first page of results. To retrieve the subsequent pages, you must call the GET method of the `/beta/search/{page-token}` endpoint, passing it the unique identifier of the page you want to retrieve.

        **NOTES:**:
          - Twelve Labs Inc. has disabled calling this method from the browser in order to avoid confusion while we’re building a user interface that will provide a better experience.
          - This feature is in beta, and the definition of the `/beta/search` endpoint is subject to change.
          - This method has a rate limit of 1 call per second for each API key. If the limit is reached, the API service returns an `HTTP 429 - Too Many Requests` error response.
          - When you use pagination, you will not be charged for retrieving subsequent pages of results.
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/betaSearch'
      responses:
        '200':
          $ref: '#/components/responses/betaSearchResultsResponse'
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/beta/search/{page-token}':
    get:
      summary: Retrieve a specific page of search results
      tags:
        - Combined queries
      description: |
        Use this endpoint to retrieve a specific page of search results.

        **NOTES**:
        - Note that this feature is in beta, and the definition of the `/beta/search/{page-token}` endpoint is subject to change.
        - When you use pagination, you will not be charged for retrieving subsequent pages of results.
      operationId: combined-queries-retrieve-specific-page
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: page-token
          in: path
          required: true
          description: |
            A token that identifies the page to retrieve.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/betaSearchSpecificPageResultsResponse'
        '400':
          $ref: '#/components/responses/searchResultsError'

####################
###   Classify   ###
####################

  '/v1.1/classify':
    post:
      summary: Classify a video
      description: Use this method to classify a video based on the entities or actions shown in that video.
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      operationId: classify-video
      tags:
        - Classify
      requestBody:
        $ref: '#/components/requestBodies/classify'
      responses:
        '200':
          description: The specified video has successfully been classified.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/classifyResponseIncludeClips'
                  - $ref: '#/components/schemas/classifyResponseNoClips'
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/classify/bulk':
    post:
      summary: Classify all the videos in an index
      description: Use this method to classify all the videos in the specified index based on the entities or actions shown in those videos. Note that this endpoint returns the first page or results. To retrieve the rest of the pages, you must call the `/classify/{page_token}` endpoint passing it the token that identifies the page you want to retrieve.
      operationId: classify-bulk
      tags:
        - Classify
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/classifyBulk'
      responses:
        '200':
          $ref: '#/components/responses/classifyBulkResponse'
        '400':
          $ref: '#/components/responses/genericError'

  '/v1.1/classify/{page_token}':
    get:
      summary: Retrieve a specific page of results
      description: The `/classify/bulk` endpoint returns the first page or results. You can use this endpoint to retrieve the rest of the pages.
      operationId: classify-retrieve-specific-page
      tags:
        - Classify
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: page_token
          description: A token that identifies the page to retrieve.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/classifyResponse'
        '400':
          $ref: '#/components/responses/genericError'




#######################
###   Components   ####
#######################

components:
  schemas:
    classifyResponseIncludeClips:
      summary: No clips
      description: An array containing information about the video fragments that match the labels you've specified.
      type: object
      properties:
        video_id:
          type: string
          description: |
            The unique identifier of the video that has been classified.


    classifyResponseNoClips:
      summary: Including clips
      description: The specified video has successfully been classified.
      type: object
      properties:
        video_id:
          type: string
          description: |
            The unique identifier of the video that has been classified.
        labels:
          description: |
            An array of objects containing information about the likelihood that each of the labels you've specified appears in the video.
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |
                  The name of the label.
              max_score:
                type: number
                description: |
                  When classifying a video, the API service finds all video fragments that match the label you've specified in the request. For each video fragment found, the API service determines the level of confidence that the fragment matches the label. The `max_score` field is determined by comparing the confidence scores of each fragment and selecting the highest one.
              duration:
                type: number
                description: |
                  The total duration of the video fragments that match the labels you've specified.
              confidence:
                type: string
                description: |
                  A qualitative indicator based on the value of the `max_score` field. This field can take one of the following values:
                  - `high`
                  - `medium`
                  - `low`
                  - `extremely low`
      example:
        video_id: 63a09373ce36463e0199c8de
        labels:
          - name: Car Shapes
            max_score: 87.15
            duration: 6069.999999999998
            confidence: high
          - name: Dangerous animals
            max_score: 46.53
            duration: 3029.8749999999995
            confidence: low


              




    classifyPageInfo:
      properties:
        expired_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the page expires.
        limit:
          type: integer
          description: |
            The maximum number of items on each page.
        next_token:
          type: string
          description: |
            The unique identifier of the next page.
        prev_token:
          type: string
          description: |
            The unique identifier of the next page.
        total_count:
          type: integer
          description: |
            The total number of results.
      type: object

    classifyLabel:
      type: object
      required:
      - name
      - prompts
      properties:
        name:
          description: A string representing the name you want to give this label.
          example: Car Shapes
          type: string
        prompts:
          description: |
            An array of strings that specifies what the label contains.
          example:
          - Truck
            Sedan
            SUV
            Convertible
          items:
            type: string
          minItems: 1
          type: array

    classifyLabelResult:
      description: |
        An array containing information about the video fragments that matched the labels you've specified.
      properties:
        clips: 
          description: |
            An array of objects containing information about each of the matching video fragments. This field is included in the response only when you set the value of the `include_clips` parameter to `true`.
          items:
            $ref: "#/components/schemas/classifyClip"
          type: array

        confidence:
          type: string
          description: |
            A qualitative indicator based on the values of the `score` field of each individual clip. It can take one of the following values:
            - `high`
            - `medium`
            - `low`
            - `extremely low`
        duration:
          description: The total duration of the matching video fragments.
          type: number
        max_score:
          description: The maximum value for the `score` property of each individual clip.
          type: number
        name:
          description: The name of the label.
          type: string



    classifyClip:
      name: clasifyClip
      description: An array containing the video fragments that match the label you've specified.
      properties:
        confidence:
          type: string
          description: |
            A qualitative indicator based on the value of the `score` field. This field can take one of the following values:
            - `high`
            - `medium`
            - `low`
            - `extremely low`
        end:
          type: number
          description: |
            End time of the matching video fragment, expressed in seconds.
        score:
          type: number
          description: |
            A quantitative value determined by the AI engine representing the level of confidence that the results match your labels.
        option:
          type: string
          description: Indicates the type of search the API service performed.
        prompt:
          type: string
          description: Indicates the prompt that the API service used.
        start:
          type: number
          description: |
            Start time of the matching video fragment, expressed in seconds.
        thumbnail_url:
          type: string
          description: |
            If thumbnail generation has been enabled for this index, the API service returns a string representing the URL of the thumbnail. Note that the URL expires in one hour.
      type: object

    engine:
      description: 'Engine object'
      title: Engine
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the identifier of the engine.
        allowed_index_options:
          type: array
          description: |
            An array of strings representing the supported indexing options. For details, see the [Indexing options](/docs/concepts-indexing-options) page.
          items:
            type: string
        author:
          type: string
          description: |
            A string indicating who created the index.
        created_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the engine was created.
        updated_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the engine was updated.
        finetune:
          type: boolean
          description: |
            A boolean indicating whether this engine supports fine-tunning. This feature is on the [roadmap](/docs/roadmap).
        ready:
          type: boolean
          description: A boolean specifying whether this engine is ready to be used.
      example:
        id: marengo2
        created_at: '2022-07-04 03:05:27.068 +0000 UTC'
        updated_at: '2022-07-04 03:05:27.068 +0000 UTC'
        allowed_index_options:
          - visual
          - text_in_video
          - conversation
        author: twelve_labs
        finetune: false
        ready: true
    index:
      title: Index
      description: |
        An index groups one or more videos stored as vectors and is the most granular level at which you can perform a search.
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of the index. It is assigned by the API when an index is created.
        index_name:
          type: string
          description: |
            A string representing the name of the index.
        index_options:
          type: array
          description: |
            An array of strings that determines how the engine processes your videos.
            
            Twelve Labs currently offers three different indexing options: `visual`, `conversation`, and `text_in_video`. For more details, see the [Indexing options](/docs/concepts-indexing-options) page.

            **NOTES**:
            - The indexing options cannot be changed once the index has been created.
            - The types of searches you can perform on this index are a subset of the indexing options.
          items:
            type: string
            enum:
              - visual
              - conversation
              - text_in_video
        created_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was created.
        updated_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was updated.
        engine_id:
          type: string
          description: |
            A string representing the unique identifier of the engine that the API will use to index the videos in this index.
        video_count:
          type: integer
          description: |
            An integer representing the number of videos in the index.
        total_duration:
          type: number
          description: |
            A number representing the total duration, in seconds, of the videos in the index.
        addons:
          type: array
          description: |
            The list of add-ons that are enabled for this index.
          items:
            type: string
      example:
        _id: 62d9bafa90077fc60af827a0
        index_name: myIndex
        index_options:
          - visual
          - text_in_video
          - conversation
        created_at: '2022-07-04T13:58:39.262Z'
        updated_at: '2022-07-05T11:11:32.026Z'
        engine_id: marengo2
        video_count: 12
        total_duration: 8716.8969
        addons:
          - thumbnail
    videoIndexingTask:
      title: Video Indexing Task
      description: |
        A task represents a request to upload and index a video. A task starts when you begin uploading your video by calling the **POST** method of the `tasks` endpoint, and it can have one of the following statuses:
        - **Validating**: Your video has finished uploading, and the API service is validating it by performing the following checks:
          - Resolution must be greater or equal than 360p and less than 1080p (FHD).
          - Duration must be between 10 seconds and 2 hours (7,200s).
          - Your video must contain an audio track.
          - Your video must not have missing frames.
        - **Pending**: The API is spawning a new worker server to process your video.
        - **Indexing**: The API is transforming the video you uploaded into vectors. A vector is like a compressed version of the video and contains all the information that Twelve Labs' deep-learning models need to perform fast, semantic, accurate, and scalable searches.
        - **Ready**: Your video is ready to be searched.
        Additionally, you may receive one of the following error messages:
        - **Broken Video File**: Your video has broken frame(s) or does not contain an audio track.
        - **Failed**: The API service encountered an internal error, and the video indexing task failed.
        The `task` object has the following elements:
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of the task. It is assigned by the API service when a new task is created.
        created_at:
          type: string
          description: 'A string indicating the date and time, in the RFC 3339 format, that the task was created.'
        updated_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
        status:
          type: string
          description: A string indicating the status of the video indexing task.
        estimated_time:
          type: string
          description: |
            A string indicating the estimated date and time, in the RFC 3339 format, that the video is ready to be searched.
        index_id:
          type: string
          description: |
            A string pointing to the index to which the video is assigned.
        metadata:
          type: object
          description: |
            An object that contains information about the video.
          properties:
            duration:
              type: number
            filename:
              type: string
            height:
              type: integer
            width:
              type: integer
      example:
        _id: 62a17bf847f5678267ec10cc
        created_at: 2022-06-09T04:50:00.879Z
        updated_at: 2022-06-09T04:55:57.256Z
        status: ready
        estimated_time: 2022-06-09T04:55:53.746Z
        index_id: 630aff993fcee0532cb809d0
        metadata:
          duration: 531.998133
          filename: 01.mp4
          height: 480
          width: 854

    videoVector:
      type: object
      title: Video Vector
      description: |
        When the API service indexes a video, it doesn't store it. Instead, the API service saves all the required information needed to perform fast, semantic, accurate, and scalable searches as lists of floating numbers. These lists are named video vectors.

        The `video_vector` object has the following elements:
        - `_id`: A string representing the unique identifier of a video. The API service creates a new `video_vector` object and assigns it a unique identifier when the video has successfully been indexed, and it's ready to be searched. Note that video IDs are different from task IDs.
        - `created_at`: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
        - `indexed_at`: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video has finished indexing.
        - `metadata`: An object that contains the following information about the video:
          - `duration`
          - `filename`
          - `fps`
          - `height`
          - `size`
          - `width`
        - `updated_at`: A string indicating the date and time, in the updated_at: A string indicating the date and time, in the RFC 3339 format, that the video indexing task object was last updated. The API service updates this field every time the video indexing task transitions to a different state. format, that the video indexing task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.

      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of a video. The API service creates a new `video_vector` object and assigns it a unique identifier when the video has successfully been indexed, and it's ready to be searched. Note that video IDs are different from task IDs.
        created_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video indexing task was created.
        updated_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video indexing task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
        indexed_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video has finished indexing.
        metadata:
          type: object
          description: |
            An object that contains information about the video.
          properties:
            filename:
              type: string
              example: 01.mp4
            duration:
              type: number
            fps:
              type: number
            width:
              type: integer
            height:
              type: integer
            size:
              type: number
      example:
        _id: 62bac61c154f59c87660cea3
        created_at: 2022-06-28T09:12:54
        updated_at: 2022-06-28T09:13:00Z
        indexed_at: 2022-06-28T09:26:42Z
        metadata:
          filename: 01.mp4
          duration: 741.875
          fps: 741.875
          width: 640
          height: 360
          size: 65749715


######################
###   Parameters   ###
######################

  parameters:
    Content-Type:
      name: Content-Type
      in: header
      description: Must be set to `application/json`.
      required: true
      schema:
        type: string
        default: application/json
    x-api-key:
      name: x-api-key
      in: header
      description: |
        Your API key.
        
        **NOTE:** You can find your API key on the [Dashboard](https://api.twelvelabs.io/dashboard) page.
      required: true
      schema:
        type: string
    page:
      name: page
      in: query
      description: |
        A number that identifies the page to retrieve.

        **Default**: `1`.
      schema:
        type: integer
        default: 1
      required: false
    page_limit:
      name: page_limit
      in: query
      description: |
        The number of items to return on each page.
        
        **Default**: `10`.
        **Max**: `50`.
      schema:
        type: integer
        default: 10
      required: false
    sort_by:
      name: sort_by
      in: query
      description: |
        The field to sort on. The following options are available:
        - `updated_at`: Sorts by the time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, when the item was updated.
        - `created_at`: Sorts by the time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, when the item was created.

        **Default**: `created_at`.
      schema:
        type: string
        default: created_at
      required: false
    sort_option:
      name: sort_option
      in: query
      description: |
        The sorting direction. The following options are available:
        - `asc` 
        - `desc`

        **Default**: `desc`.
      schema:
        type: string
        default: desc
      required: false
    _id:
      name: _id
      in: query
      description: |
        Filter by the unique identifier of a video indexing task. 
      schema:
        type: string
      required: false
    index_id:
      name: index_id
      in: query
      description: |
        Filter by the unique identifier of an index.
      schema:
        type: string
      required: false
    filename:
      name: filename
      in: query
      description: |
        Filter by filename.
      schema:
        type: string
      required: false
    duration:
      name: duration
      in: query
      description: |
        Filter by duration. Expressed in seconds.
      schema:
        type: number
      required: false
    width:
      name: width
      in: query
      description: |
        Filter by width.
      schema:
        type: integer
      required: false
    height:
      name: height
      in: query
      description: |
        Filter by height.
      schema:
        type: integer
      required: false
    created_at:
      name: created_at
      in: query
      description: |
        Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
      schema:
        type: string
      required: false
    updated_at:
      name: updated_at
      in: query
      description: |
        Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was updated.
      schema:
        type: string
      required: false
    estimated_time:
      name: estimated_time
      in: query
      description: |
        Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task is ready to be searched.
      schema:
        type: string
      required: false


#####################
###   Responses   ###
#####################

  responses:

    searchResultsResponsePageId:
      description: Successfully retrieved the specified page of search results.
      content:
        application/json:
          schema:
            type: object
            properties:
              conversation_option:
                type: string
                description: |
                  Indicates the type of search the API performed.
              data:
                type: array
                description: An array that contains your search results. For each match found, the engine returns the following fields.
                items:
                  type: object
                  properties:
                    score:
                      type: string
                      description: |
                        A quantitative value determined by the AI engine representing the level of confidence that the results match your search terms.
                    start:
                      type: number
                      description: Start time of the matching video fragment, expressed in seconds.
                    end:
                      type: number
                      description: End time of the matching video fragment, expressed in seconds.
                    video_id:
                      type: string
                      description: A string representing the unique identifier of the video. Once the API service indexes a video, it assigns a unique identifier. Note that this is different from the identifier of the video indexing task.
                    metadata:
                      type: array
                      description: |
                        An array of objects where each object contains details about a specific type of match and has the following fields:
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: A string that indicates the type of match (`visual`, `conversation`, `text_in_video`).
                          text:
                            type: string
                            description: For `conversation` and `text_in_video`, the API returns a transcription of the spoken words or the text that matches your search query.
                    confidence:
                      type: string
                      description: |
                        A qualitative indicator based on the value of the score field. This field can take one of the following values:
                        - `high`
                        - `medium`
                        - `low`
                        - `extremely low`
                    thumbnail_url:
                      type: string
                      description: |
                        If thumbnail generation has been enabled for this index, the API service returns a string representing the URL of the thumbnail. Note that the URL expires in one hour.
                    module_confidence:
                      type: object
                      description: When multiple search options are specified in the request, the API service returns the confidence level that the results match your search terms for each search option as an object composed of key-value pairs. Each search option represents a key, and the confidence level represents the value.
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: |
                      The maximum number of items on each page. When grouping by video, this field represents the maximum number of videos per page. Otherwise, it represents the maximum number of video fragments per page. 
                  page_expired_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the page expires.
                  total_results:
                    type: integer
                    description: |
                      The total number of results. When grouping by video, this field represents the total number of video fragments matching your query. Otherwise , this field represents the total number of videos.
                  total_inner_matches:
                    type: integer 
                    description: |
                      When grouping by video, the API service return this field that shows the total number of video fragments matching your query.
                  next_page_token:
                    type: string
                    description: The unique identifier of the next page.
                  prev_page_token:
                    type: string
                    description: The unique identifier of the previous page.
              query:
                type: string
                description: The search query you specified.
              search_options:
                type: array
                description: The search options you used.
              search_pool:
                type: object
                description: An object that contains details about the index you queried.
                properties:
                  total_count:
                    type: integer
                    description: The number of videos in the index you queried.
                  total_duration:
                    type: number
                    description: The total duration of the videos.
                  index_id:
                    type: string
                    description: The unique identifier of the index.
          example:
            search_pool:
              total_count: 13
              total_duration: 8731
              index_id: 639961c9e219c90227c371a2
            query: racing car cornering
            search_options:
            - conversation
            - visual
            conversation_option: semantic
            data:
            - score: 85.08
              start: 515.4375
              end: 527
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/516.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=9e991f972f8a1baa647d7460685d99e20c4a27408406a972a4baf173a10b0102
              module_confidence:
                visual: high
            - score: 85.05
              start: 11.5125
              end: 23.140625
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/12.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=cd6b29e8723d51f71823dbd01c8edd252e49a8b231aca218f844e745e6b4e83a
              module_confidence:
                visual: high
            - score: 85.05
              start: 763.7708333333334
              end: 782.0625
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/764.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=4cb4392044330b76bca5e6b167ef4c3b9e04a3bcc0ca5e1af188005edbca21b7
              module_confidence:
                visual: high
            - score: 84.95
              start: 252.2421875
              end: 278.15625
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/253.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134943Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=75ddcff5ed8f14d400e21cb211440edc986a6d0320e4538a7ab2d1df4918ea43
              module_confidence:
                visual: high
            - score: 84.95
              start: 293.75
              end: 302.47499999999997
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/294.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=0a0882611208dbbdc836090426c95deb422c34ed41a3cb0ed56b78227c51c243
              module_confidence:
                visual: high
            - score: 84.87
              start: 10.46875
              end: 39.225
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/11.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134943Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=6d66c1afa7ea46df9127133114a84fbc426cb6f07ab65e3cca0b1c311dfb23d9
              module_confidence:
                visual: high
            - score: 84.85
              start: 479.09375
              end: 596.71875
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/480.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134943Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=7d9194af02753a9c756ef3e9c87419a1b4c2d42c1d6ff81a18c5b4b190dd2f8a
              module_confidence:
                visual: high
            - score: 84.84
              start: 127.60416666666667
              end: 133.375
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/128.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=2f805542fb4a54afe358aecb74c3bed0bc5cb28aed0310dfd6f3dd695f60d925
              module_confidence:
                visual: high
            - score: 84.8
              start: 471
              end: 477.59375
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/472.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=89637e18b70d0acfffe06cf2c2f12fc392630ea8b8238cf4ab0c4ffac2bca164
              module_confidence:
                visual: high
            - score: 84.74
              start: 85.5
              end: 93.90625
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/86.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134944Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=507658ec89d016005338e7597dc70651751def947cd648dc107adde5af19d9eb
              module_confidence:
                visual: high
            page_info:
              limit_per_page: 10
              total_results: 195
              page_expired_at: '2022-12-22T13:49:44Z'
              next_page_token: cdfb7ca8-9316-4518-af82-8cadbe934474-2
              prev_page_token: cdfb7ca8-9316-4518-af82-8cadbe934474-0
            type: search_create_token


    cloudToCloudTransferResponse:
      description: If successful, this method returns `204 No Content` response code. It does not return anything in the response body.
    updateIndexResponse:
      description: If successful, this method returns `204 No Content` response code. It does not return anything in the response body.

    betaSearchResultsResponse:
      description: Successfully performed a search request.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                description: |
                  An array of objects that contains your search results.
                items:
                  type: object
                  properties:
                    score:
                      description: |
                        A quantitative value determined by the AI engine representing the level of confidence that the results match your search terms.
                    start:
                      description: |
                        Start time of the matching video fragment, expressed in seconds.
                      type: number
                    end:
                      description: |
                        End time of the matching video fragment, expressed in seconds.
                    video_id:
                      type: string
                      description: |
                        A string representing the unique identifier of the video. Once the API service indexes a video, it assigns a unique identifier. Note that this is different from the identifier of the video indexing task.
                    confidence:
                      type: string
                      description: |
                        A qualitative indicator based on the value of the score field. This field can take one of the following values:
                        - `high`
                        - `medium`
                        - `low`
                        - `extremely low`
                    thumbnail_url:
                      type: string
                      description: |
                        If thumbnail generation has been enabled for this index, the API service returns a string representing the URL of the thumbnail. Note that the URL expires in one hour.
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page_expired_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the page expires.
                  total_results:
                    type: integer
                    description: The total number of results.
                  next_page_token:
                    type: string
                    description: The unique identifier of the next page.
              search_pool:
                type: object
                description: An object that contains details about the index you queried.
                properties:
                  total_count:
                    type: integer
                    description: The number of videos in the index you queried.
                  total_duration:
                    type: number
                    description: The total duration of the videos.
                  index_id:
                    type: string
                    description: The unique identifier of the index.
          example:
            search_pool:
              total_count: 11
              total_duration: 7519
              index_id: 639961c9e219c90227c371a2
            data:
              - score: 86.69
                start: 139
                end: 160
                video_id: 63996260ce36463e0199c8c5
                confidence: high
                thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/63996260ce36463e0199c8c5/140.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221218%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221218T072553Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=e0e7e498b28837c94acc44404ebe7c050efde38e26c66d00e8db33182b37ab76
              - score: 86.17
                start: 173
                end: 190
                video_id: 63996260ce36463e0199c8c5
                confidence: high
                thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/63996260ce36463e0199c8c5/174.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221218%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221218T072553Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=340e1e908070cafd12c0f63d09dcecb3bf6caebbf0753829a2da820219f56c12
              - score: 86.14
                start: 520
                end: 667
                video_id: 63996246ce36463e0199c8c4
                confidence: high
                thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/63996246ce36463e0199c8c4/521.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221218%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221218T072553Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=8ca5247b030f403068762f959d0c9ca55d24cbab927d27217d21c708d44f4c25
            page_info:
              limit_per_page: 5
              total_results: 859
              page_expired_at: 2022-12-18T07:25:53Z
              next_page_token: 4849bbc1-0f10-4ab1-9f10-9cfaf6e62311-1


    betaSearchSpecificPageResultsResponse:
      description: Successfully performed a search request.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                description: |
                  An array of objects that contains your search results.
                items:
                  type: object
                  properties:
                    score:
                      description: |
                        A quantitative value determined by the AI engine representing the level of confidence that the results match your search terms.
                    start:
                      description: |
                        Start time of the matching video fragment, expressed in seconds.
                      type: number
                    end:
                      description: |
                        End time of the matching video fragment, expressed in seconds.
                    video_id:
                      type: string
                      description: |
                        A string representing the unique identifier of the video. Once the API service indexes a video, it assigns a unique identifier. Note that this is different from the identifier of the video indexing task.
                    confidence:
                      type: string
                      description: |
                        A qualitative indicator based on the value of the score field. This field can take one of the following values:
                        - `high`
                        - `medium`
                        - `low`
                        - `extremely low`
                    thumbnail_url:
                      type: string
                      description: |
                        If thumbnail generation has been enabled for this index, the API service returns a string representing the URL of the thumbnail. Note that the URL expires in one hour.
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page_expired_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the page expires.
                  total_results:
                    type: integer
                    description: The total number of results.
                  next_page_token:
                    type: string
                    description: The unique identifier of the next page.
              search_pool:
                type: object
                description: An object that contains details about the index you queried.
                properties:
                  total_count:
                    type: integer
                    description: The number of videos in the index you queried.
                  total_duration:
                    type: number
                    description: The total duration of the videos.
                  index_id:
                    type: string
                    description: The unique identifier of the index.
          example:
            search_pool:
              total_count: 11
              total_duration: 7519
              index_id: 639961c9e219c90227c371a2
            data:
              - score: 86.69
                start: 139
                end: 160
                video_id: 63996260ce36463e0199c8c5
                confidence: high
                thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/63996260ce36463e0199c8c5/140.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221218%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221218T072553Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=e0e7e498b28837c94acc44404ebe7c050efde38e26c66d00e8db33182b37ab76
              - score: 86.17
                start: 173
                end: 190
                video_id: 63996260ce36463e0199c8c5
                confidence: high
                thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/63996260ce36463e0199c8c5/174.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221218%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221218T072553Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=340e1e908070cafd12c0f63d09dcecb3bf6caebbf0753829a2da820219f56c12
              - score: 86.14
                start: 520
                end: 667
                video_id: 63996246ce36463e0199c8c4
                confidence: high
                thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/63996246ce36463e0199c8c4/521.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221218%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221218T072553Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=8ca5247b030f403068762f959d0c9ca55d24cbab927d27217d21c708d44f4c25
            page_info:
              limit_per_page: 5
              total_results: 859
              page_expired_at: 2022-12-18T12:34:24Z
              next_page_token: 3d1aea54-feba-4cee-a308-48c24c241427-2
              prev_page_token: 3d1aea54-feba-4cee-a308-48c24c241427-0


    searchResultsResponse:
      description: Successfully performed a search request.
      content:
        application/json:
          schema:
            type: object
            properties:
              conversation_option:
                type: string
                description: |
                  Indicates the type of search the API performed.
              data:
                type: array
                description: |
                  An array that contains your search results. For each match found, the engine returns the following fields:
                items:
                  type: object
                  properties:
                    score:
                      type: number
                      description: |
                        A quantitative value determined by the AI engine representing the level of confidence that the results match your search terms.
                    start:
                      type: number
                      description: Start time of the matching video fragment, expressed in seconds.
                    end:
                      type: number
                      description: End time of the matching video fragment, expressed in seconds.
                    video_id:
                      type: string
                      description: A string representing the unique identifier of the video. Once the API service indexes a video, it assigns a unique identifier. Note that this is different from the identifier of the video indexing task.
                    metadata:
                      type: array
                      description: |
                        An array of objects where each object contains details about a specific type of match and has the following fields:
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: A string that indicates the type of match (`visual`, `conversation`, `text_in_video`).
                          text:
                            type: string
                            description: For `conversation` and `text_in_video`, the API returns a transcription of the spoken words or the text that matches your search query.
                    confidence:
                      type: string
                      description: |
                        A qualitative indicator based on the value of the score field. This field can take one of the following values:
                        - `high`
                        - `medium`
                        - `low`
                        - `extremely low`
                    thumbnail_url:
                      type: string
                      description: |
                        If thumbnail generation has been enabled for this index, the API service returns a string representing the URL of the thumbnail. Note that the URL expires in one hour.
                    module_confidence:
                      type: object
                      description: When multiple search options were specified, the API service returns the confidence level for each search option as an object composed of key-value pairs. The search option represents the key, and the confidence level represents the value.
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: |
                      The maximum number of items on each page. When grouping by video, this field represents the maximum number of videos per page. Otherwise, it represents the maximum number of video fragments per page.
                  page_expired_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the page expires.
                  total_results:
                    type: integer
                    description: |
                      The total number of results. When grouping by video, this field represents the total number of video fragments matching your query. Otherwise , this field represents the total number of videos. 
                  total_inner_matches:
                    type: integer
                    description: |
                      When grouping by video, the API service return this field that shows the total number of video fragments matching your query.
                  next_page_token:
                    type: string
                    description: The unique identifier of the next page.
              query:
                type: string
                description: The search query you specified.
              search_options:
                type: array
                description: The search options you used.
              search_pool:
                type: object
                description: An object that contains details about the index you queried.
                properties:
                  total_count:
                    type: integer
                    description: The number of videos in the index you queried.
                  total_duration:
                    type: number
                    description: The total duration of the videos.
                  index_id:
                    type: string
                    description: The unique identifier of the index.
          example:
            search_pool:
              total_count: 13
              total_duration: 8731
              index_id: 639961c9e219c90227c371a2
            query: racing car cornering
            search_options:
            - conversation
            - visual
            conversation_option: semantic
            data:
            - score: 85.75
              start: 238.75
              end: 259.62109375
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/239.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=ded5986fa30922e264a1e5fd64d1d0e216778d204645b2fdfb2cea765d297d5c
              module_confidence:
                visual: high
            - score: 85.7
              start: 392.58125
              end: 410.5
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/393.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=bd143ac27f13e7024191ae793b5ab8a1decde47d889d157e84d7be11083a64d3
              module_confidence:
                visual: high
            - score: 85.65
              start: 50.21875
              end: 64.34375
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/51.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=2cff1948607cf211a88a90dfbbe01963bab9e71a8f3e20ab8893031cc986634e
              module_confidence:
                visual: high
            - score: 85.57
              start: 0
              end: 10.46875
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/1.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=d1db854a0ed064860dba6bf2b4e2296e058c75b92d66a357b8894ff268756966
              module_confidence:
                visual: high
            - score: 85.2
              start: 69.78125
              end: 77.8125
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/70.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=0bf6e0e88e09e5c2ca3006ab395908c53d62e7631ac9118752ad254f74e1bdd0
              module_confidence:
                visual: high
            - score: 85.12
              start: 106.8125
              end: 117.8125
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/107.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=92b6ef6660e64a42a9e99a0e095033d897accfe85e9dd14a6775dbcd4a57374d
              module_confidence:
                visual: high
            - score: 85.09
              start: 620.96875
              end: 696.296875
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/621.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=1acedc58645cc95c226081bd6b115aceaaec607db8f3894138cfa9fbb58d7413
              module_confidence:
                visual: high
            - score: 85.08
              start: 31.5625
              end: 37.3125
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/32.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=e5527ad78a51e12c86d01804043dd6c7d6e2c3e82b150807045f5a82d2151c00
              module_confidence:
                visual: high
            - score: 85.08
              start: 39.96875
              end: 45.40625
              metadata:
              - type: visual
              video_id: 639963a1ce36463e0199c8c7
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/639963a1ce36463e0199c8c7/40.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=e01ea033f592f78dfe5dff148b0964af73756467e7e35a21f4591a36fd6f66e0
              module_confidence:
                visual: high
            - score: 85.08
              start: 72.5125
              end: 99.8125
              metadata:
              - type: visual
              video_id: 6399637ace36463e0199c8c6
              confidence: high
              thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6399637ace36463e0199c8c6/73.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221222%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221222T134403Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=2ae0d7c77289993a9c4326ee3f964fbf379fbb118ab78f4dcef3b2207abfc13d
              module_confidence:
                visual: high
            page_info:
              limit_per_page: 10
              total_results: 195
              page_expired_at: '2022-12-22T13:44:03Z'
              next_page_token: b84a9a99-e1af-4927-9faa-fdde8c555d38-1

    retrieveTranscriptionResponse:
      description: Transcription has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
                description: The unique identifier of the video.
              data:
                type: array
                description: An array of objects that contains the transcription. For each time range for which the API service finds spoken words, it returns an object that contains the fields below. If the API service doesn't find any spoken words, the data field is set to `None`.
                items:
                  type: object
                  properties:
                    start:
                      type: number
                      description: The start of the time range, expressed in seconds.
                    end:
                      type: number
                      description: The end of the time range, expressed in seconds.
                    value:
                      type: string
                      description: Text representing the spoken words within this time range.
              index_id:
                type: string
                description: The unique identifier of the index to which the video has been uploaded.
          example:
            id: 61e17c1c777e6caec646fa08
            data:
              - end: 8.86
                start: 4.34
                value: 'Hello?'
              - end: 10.95
                start: 9.56
                value: ' Yeah,'
            index_id: 61e165b061c43d6d9b73627b

    retrieveOcrResponse:
      description: OCRs have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
                description: The unique identifier of the video.
              data:
                type: array
                description: |
                  An array that contains the OCR elements. For each time range for which the API service finds OCR elements, it returns an object that contains the fields below.
                  If the API service doesn't find any OCR elements, the `data` field is set to `None`.
                items:
                  type: object
                  properties:
                    start:
                      description: 'The start of the time range, expressed in seconds.'
                      type: number
                    end:
                      description: 'The end of the time range, expressed in seconds.'
                      type: number
                    value:
                      description: |
                        Recognized text within this time range.
                      type: string
              index_id:
                type: string
                description: The unique identifier of the index to which the video has been updated.
                example: 61e165b061c43d6d9b73627b
          example:
            id: 61e17c1c777e6caec646fa08
            data:
              - start: 22
                end: 42
                value: LIVE
              - start: 23
                end: 24
                value: VISITE SAO PAULO
              - start: 23
                end: 24
                value: TED KRAVITZ
            index_id: 61e165b061c43d6d9b73627b

    retrieveThumbnailResponse:
      description: A thumbnail has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              thumbnail:
                type: string
                description: A string representing the URL of the thumbnail. Note that the URL expires in one hour.
          example:
            thumbnail: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/6320748774fed2f3511f2a92/10.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20220914%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220914T075213Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=46b3bac13fb8b022313244780c238cb6bfc53eddcbee3be23a8d2dd22d99543e
  
    getVideoVectorsResponse:
      description: The video vectors in the specified index have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to `page_limit` videos.
                items:
                  $ref: '#/components/schemas/videoVector'
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page:
                    type: integer
                    description: The page you retrieved.
                  total_page:
                    type: integer
                    description: The total number of pages.
                  total_results:
                    type: integer
                    description: The total number of results.

            example:
              data:
                - _id: 62a17bf847f5678267ec10cc
                  created_at: '2022-06-09T04:50:00.879Z'
                  estimated_time: '2022-06-09T04:55:53.746Z'
                  index_id: 62a0906d47f5678267ec10a6
                  metadata:
                    duration: 531.998133
                    filename: 01.mp4
                    height: 400
                    width: 854
                  status: ready
                  updated_at: '2022-06-09T04:55:57.256Z'
                - _id: 62a17bce47f5678267ec10c6
                  created_at: '2022-06-09T04:49:20.001Z'
                  estimated_time: '2022-06-09T04:53:59.772Z'
                  index_id: 62a0906d47f5678267ec10a6
                  metadata:
                    duration: 741.875
                    filename: 02.mp4
                    height: 480
                    width: 854
                  status: ready
                  updated_at: '2022-06-09T04:54:10.345Z'
              page_info:
                limit_per_page: 10
                page: 1
                total_page: 1
                total_results: 2

    getVideoVectorResponse:
      description: The specified video information has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id: 
                type: string
                description: The unique identifier of the video.
              created_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
              updated_at: 
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the corresponding video indexing task was last updated. The API service updates this field every time the corresponding video indexing task transitions to a different state.
              indexed_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video has finished indexing.
              metadata:
                type: object
                description: An object that contains the information about the video.
                properties:
                  duration:
                    type: number
                  filename:
                    type: string
                  fps:
                    type: number
                  height:
                    type: integer
                  width:
                    type: integer
            example:
              _id: 61e17be5777e6caec646fa07
              created_at: 2022-01-14T13:34:29Z
              updated_at: 2022-01-14T13:34:29Z
              indexed_at: 2022-01-14T14:05:55Z
              metadata:
                duration: 3747.841667
                filename: IOKgzkakhlk.mp4
                fps: 29.97002997002997
                height: 360
                width: 482

    getIndexResponse:
      description: The specified index has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: A string representing the unique identifier of the index. It is assigned by the API when an index is created.
              created_at:
                type: string
                description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was created.
              engine_id:
                type: string
                description: A string representing the unique identifier of the engine that the API will use to index the videos in this index.
              index_name:
                type: string
                description: A string representing the name of the index.
              index_options:
                type: array
                description: |
                  An array of strings that determines how the engine processes your videos.
                  
                  Twelve Labs currently offers three different indexing options: `visual`, `conversation`, and `text_in_video`. For more details, see the [Indexing Options](/docs/concepts-indexing-options) page.

                  **NOTES**:
                  - The indexing options cannot be changed once the index has been created.
                  - The types of searches you can perform on this index are a subset of the indexing options.


              updated_at:
                type: string
                description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was updated.
              total_duration:
                type: number
                description: A number representing the total duration, in seconds, of the videos in the index.
              addons:
                type: array
                description: |
                  The list of add-ons that are enabled for this index.
                items:
                  type: string
          example:
            _id: 62d9bafa90077fc60af827a0
            index_name: myIndex
            index_options:
              - visual
              - text_in_video
              - conversation
            created_at: 2022-07-04T13:58:39.262Z
            updated_at: 2022-07-05T11:11:32.026Z
            engine_id: marengo2
            video_count: 12
            total_duration: 8716.8969
            addons:
              - thumbnail

    getVideoIndexingTasksResponse:
      description: The video indexing tasks have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to `page_limit` tasks.
                items:
                  $ref: '#/components/schemas/videoIndexingTask'
              page_info:
                description: |
                  An object that provides information about pagination.
                type: object
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page:
                    type: integer
                    description: The page you retrieved.
                  total_page:
                    type: integer
                    description: The total number of pages.
                  total_results:
                    type: integer
                    description: The total number of results.
          example:
            data:
              - _id: 62a17bf847f5678267ec10cc
                created_at: '2022-06-09T04:50:00.879Z'
                estimated_time: '2022-06-09T04:55:53.746Z'
                index_id: 62a0906d47f5678267ec10a6
                metadata:
                  duration: 531.998133
                  filename: 01.mp4
                  height: 400
                  width: 854
                status: ready
                updated_at: '2022-06-09T04:55:57.256Z'
              - _id: 62a17bce47f5678267ec10c6
                created_at: '2022-06-09T04:49:20.001Z'
                estimated_time: '2022-06-09T04:53:59.772Z'
                index_id: 62a0906d47f5678267ec10a6
                metadata:
                  duration: 741.875
                  filename: 02.mp4
                  height: 480
                  width: 854
                status: ready
                updated_at: '2022-06-09T04:54:10.345Z'
            page_info:
              limit_per_page: 10
              page: 1
              total_page: 1
              total_results: 2

    retrieveSummaryVideoIndexingTaskResponse:
      description: |
        An object containing the number video indexing tasks in each status.
      content:
        application/json:
          schema:
            properties:
              index_id:
                type: string
                description: The unique identifier of the index.
              ready:
                type: integer
                description: A value indicating the number of video indexing tasks for which the status is `ready`.
              validating:
                type: integer
                description: A value indicating the number of video indexing tasks for which the status is `validating`.
              pending:
                type: integer
                description:  A value indicating the number of video indexing tasks for which the status is `pending`.
              failed:
                type: integer
                description: A value indicating the number of video indexing tasks for which the status is `failed`.
              total:
                type: integer
                description: A value indicating the total number of video indexing tasks in the specified index.
          example:
              index_id: 635be12062c8def3b96b2616
              ready: 7
              validating: 2
              pending: 0
              indexing: 1
              failed: 0
              total_result: 10


    getVideoIndexingTaskResponse:
      description: The specified video indexing task has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: The unique identifier of the video indexing task.
              created_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the task object has been created.
              updated_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
              estimated_time:
                type: string
                description: A string indicating the estimated date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video is ready to be searched.
              index_id:
                type: string
                description: A string pointing to the index to which the video is assigned.
              video_id:
                type: string
                description: A string representing the unique identifier of the video associated with the specified video indexing task. The API returns this field only when the value of the `status` field is `ready`.
              status:
                type: string
                description: A string indicating the status of the video indexing task.
              metadata:
                type: object
                description: An object that contains details about the video.
                properties:
                  duration:
                    type: number
                  filename:
                    type: string
                  height:
                    type: integer
                  width:
                    type: integer
              process:
                type: object
                description: If your video has not yet finished indexing, the API service returns the current progress of the indexing operation.
                properties:
                  percentage:
                    description: |
                      A value between 0 and 100 that indicates the percentage complete.
                    type: number
                  remain_seconds:
                    description: |
                      Estimated time left, expressed in seconds, until the video finishes indexing.
                    type: number

          example:
            _id: 61e1789761c43d6d9b7362f3
            created_at: 2022-01-14T13:20:22.986Z
            updated_at: 2022-01-17T08:35:21.639Z
            estimated_time: 2022-01-14T14:18:52.175Z
            index_id: 61e165b061c43d6d9b73627b
            metadata:
              duration: 4334.0297
              filename: WPK3hvTr8PU.mp4
              height: 360
              width: 544
            status: indexing


    getIndexesResponse:
      description: The indexes have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to `page_limit` indexes.
                items:
                  $ref: '#/components/schemas/index'
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    description: The maximum number of items on each page.
                    type: integer
                  page:
                    description: The page you retrieved.
                    type: integer
                  total_page:
                    description: The total number of pages.
                    type: integer
                  total_results:
                    description: The total number of results. 
                    type: integer
            example:
              data:
                - _id: 62d85fe7340fa665f1fda5dd
                  index_name: index-01
                  index_options:
                    - visual
                    - conversation
                    - text_in_video
                  created_at: '2022-07-20T20:04:55.776Z'
                  updated_at: '2022-07-20T20:04:55.776Z'
                  engine_id: marengo2
                  video_count: 2
                  total_duration: 1363.76
                  addons:
                    - thumbnail
                - _id: 62d858ee340fa665f1fda5d8
                  index_name: index-02
                  index_options:
                    - visual
                    - conversation
                    - text_in_video
                  created_at: '2022-07-20T19:35:10.385Z'
                  updated_at: '2022-07-20T19:35:10.385Z'
                  engine_id: marengo2
                  video_count: 1
                  total_duration: 579.12
                  addons:
                    - thumbnail
              page_info:
                limit_per_page: 10
                page: 1
                total_page: 1
                total_results: 2
    updateVideoVectorResponse:
      description: If successful, this method returns `204 No Content` response code. It does not return anything in the response body.
    deleteVideoVectorResponse:
      description: If successful, this method returns `204 No Content` response code. It does not return anything in the response body.
    deleteIndexResponse:
      description: If successful, this method returns `204 No Content` response code. It does not return anything in the response body.
    createVideoIndexingTaskResponse:
      description: A video indexing task has successfully been created.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: A string representing the unique identifier of the `task` object.
          example:
            _id: 62a1ec6d9ea24f052b971a0f
    getEngineResponse:
      description: The specified engine has successfully been retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/engine'
    getEnginesResponse:
      description: The engines have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains the `engine` objects.
                items:
                  $ref: '#/components/schemas/engine'
            example:
                - _id: marengo
                  allowed_index_options:
                    - visual
                    - text_in_video
                    - conversation
                  author: twelve_labs
                  created_at: '2022-07-24 09:30:52.683 +0000 UTC'
                  finetune: false
                  ready: true
                  updated_at: '2022-07-24 09:30:52.683 +0000 UTC'
                - _id: marengo2
                  allowed_index_options:
                    - visual
                    - text_in_video
                    - conversation
                  author: twelve_labs
                  created_at: '2022-07-24 09:30:52.686 +0000 UTC'
                  finetune: false
                  ready: true
                  updated_at: '2022-07-24 09:30:52.686 +0000 UTC'
                
    createIndexResponse:
      description: An index has successfully been created
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: Represents the unique identifier of the `index` object.
            example:
              _id: 62d85fe7340fa665f1fda5dd
    
    searchResultsError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: integer
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
          example:
            error_code: 104
            message: The conversation option of transcription is not allowed with multiple search options. You should use semantic instead.
    
    genericError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  A string representing the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message: 
                type: string
                description: |
                  A human-readable string describing the error, intended to be suitable for display in a user interface.
              docs_url: 
                type: string
                description: |
                  The URL of the relevant documentation page.
    notFound:
      description: The specifed resource does not exist.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                description: |
                  Represents the code associated with the error. See the [Error codes](/reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.
    
  

    classifyResponse:
      description: The specified video has successfully been classified.
      content:
        application/json:
          schema:
            type: object
            properties:
              labels:
                description: |
                  An array of objects containing information about the likelihood that each of the labels you've specified appears in the video.
                items:
                  $ref: '#/components/schemas/classifyLabelResult'
                type: array
              video_id:
                type: string
                description: The unique identifier of the video that has been classified.
            example:
              video_id: 636b932fe9521f7108f5a30e
              labels:
                - name: Dangerous animals
                  max_score: 84.59
                  duration: 120
                  confidence: high
                  clips:
                    - start: 40
                      end: 46
                      score: 83.45
                      confidence: high
                      option: visual
                      prompt: Hippo
                      thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/636b932fe9521f7108f5a30e/41.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221213T064305Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=836c44fd8d4ff4524b3987b77ac97d032eb6a1bbf6252a0ed8ea5cddca5c583c
                    - start: 56
                      end: 74
                      score: 84.59
                      confidence: high
                      option: visual
                      prompt: Bear
                      thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/636b932fe9521f7108f5a30e/57.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221213T064305Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=b5aa71735987631ef8cfebbf40d737622e5e6390740a100e7094eb769b2350ca
                    - start: 128
                      end: 134
                      score: 83.1
                      confidence: high
                      option: visual
                      prompt: Lion
                      thumbnail_url: https://project-one-thumbnail.s3.us-west-2.amazonaws.com/636b932fe9521f7108f5a30e/129.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAYRWJPOVHXE5SJ77T%2F20221213%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20221213T064305Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&x-id=GetObject&X-Amz-Signature=a12488cb8c2da05445f1b3d90ef17f16ac2ced05fc1fc239c75b9eaad3466136


    classifyBulkResponse:
      description: The videos in the specified index have successfully been classified.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                description: An array that contains the labels that were detected in each video. 
                items:
                  $ref: '#/components/schemas/classifyLabelResult'
              page_info:
                $ref: '#/components/schemas/classifyPageInfo'
          example:
            data:
              - video_id: 6396c32269ff3402ec515ae0
                labels:
                  - name: Car Shapes
                    max_score: 49.2
                    duration: 8.697916666666671
                    confidence: low
                    clips:
                        - start: 75.75
                          end: 79.15625
                          score: 47.24
                          confidence: low
                          option: visual
                          prompt: Crrossover
                        - start: 103.02083333333333,
                          end: 108.3125
                          score: 49.24
                          confidence: low
                          option: visual
                          prompt: Hatchback
              - video_id: 6396c23969ff3402ec515add
                labels:
                  - name: Car Shapes
                    max_score: 49.2
                    duration: 8.697916666666671
                    confidence: low
                    clips:
                        - start: 10.2
                          end: 14.624
                          score: 48.14
                          confidence: low
                          option: visual
                          prompt: SUV
                        - start: 25.8
                          end: 29.512
                          score: 49.24
                          confidence: medium
                          option: visual
                          prompt: Coupe
                page_info:
                  total_count: 4
                  limit: 2
                  next_token: a00ed394-75cf-41c0-9e17-39d9420bf081-1
                  expired_at: 2022-12-13T11:09:08Z
                








              

##########################
###   Request Bodies   ###
##########################

  requestBodies:

    classifyBulk:
      content:
        application/json:
          schema:
            type: object
            required:
            - index_id
            - labels
            - options
            properties:
              conversation_option:
                description: |
                  Specifies the type of search the API service will perform. The following values are supported: `semantic` and `transcription`. For details, see the [Conversation option](/docs/conversation-options) page.

                  **Default:** `semantic`
                default: semantic
                enum:
                - semantic
                - transcription
                type: string
              include_clips:
                default: false
                description: |
                  When this parameter is set to `true`, the API service will return information about each matching video fragment.

                  **Default:** `false`
                type: boolean
              index_id:
                type: string
                description: |
                  The unique identifier of the index containing the videos you want to classify.
              labels:
                description: |
                  An array containing the names and the definitions of entities or actions that the API service must identify.
                items:
                  $ref: '#/components/schemas/classifyLabel'
                minItems: 1
                type: array
              options:
                description: |
                  An array that specifies the sources of information the API service uses when it categorizes a video. For details, see the [Search options](/docs/concepts-search-options) page.
                items:
                  enum:
                  - conversation
                  - text_in_video
                  - visual
                  type: string
                minItems: 1
                type: array
              page_limit:
                description: |
                  The number of items to return on each page.

                  **Default:** 10
                  **Min:** 1
                  **Max:** 50
                default: 10
                maximum: 50
                minimum: 1
                type: integer
              threshold:
                description: |
                  Use this parameter to filter on the level of confidence that the results match your labels.

                  **Default:** `low`
                default: low
                enum:
                - high
                - medium
                - low
                - none
                type: string


    betaSearch:
      content:
        application/json:
          schema:
            type: object
            required:
              - index_id
            properties:
              filter:
                  description: |
                    Use this parameter to filter your search results by metadata.

                    For string fields, the filter parameter returns only the results that equal the value you specify. The following example filters on the videos whose title is "Animal Encounters part 1": `"title": "Animal Encounters part 1"`.

                    For numeric fields, the filter parameter returns the results that match based on the arithmetic comparison. The following example filters on the videos whose height is greater than or equal to 400 and less than or equal to 500: `"height": { "gte": 400, "lte": 500 }`.

                    You can also filter by any of the custom fields specified using the PUT method of the `/indexes/{index-id}/videos/{video-id}` endpoint. The following example returns only the videos for which a custom field named `needsReview` of type boolean is set to true: `"needs_review": true`.
                  properties:
                    id:
                      type: array
                      description: An array of strings that restricts your search results based on the specified video IDs.
                      items:
                        type: string
                    duration:
                      type: number
                      description: 'A numeric field that restricts your search results based on duration, expressed in seconds.'
                    width:
                      type: number
                      description: A numeric field that restricts your search results based on width.
                    height:
                      type: number
                      description: A numeric field that restricts your search results based on height.
                    size:
                      type: number
                      description: 'A numeric field that restricts your search results based on size, expressed in bytes.'
                    title:
                      type: string
                      description: A string field that restricts your search results based on the title of the video.
                  additionalProperties: {}
              index_id:
                description: |
                  The unique identifier of the index to search.
                type: string
              page_limit:
                type: number
                description: |
                  The number of items to return on each page.

                  **Default**: `10`
                  **Max**: `50`
                default: 10
              threshold:
                type: string
                description: |
                  Use this parameter to filter on the level of confidence that the search results match your query.

                  **Default:** `low`
                enum:
                  - high
                  - medium
                  - low
                  - none
                default: low
              query:
                type: object
                description: |
                  
                  Use the `query` parameter to build combined queries. Note that this feature is in beta, and the definition of the `/beta/search` endpoint is subject to change.

                  For details about building combined queries, see the [Combined queries](/docs/guides-combined-queries) page.

                additionalProperties: {}
                properties:
                  proximity:
                    type: number
                    description: |
                      When specifying multiple search queries, you can use the `proximity` parameter to limit or expand your search results by extending the lower and upper boundaries of each subquery. This parameter is expressed in seconds.


                      **Example:**
                      You've specified two queries and used to `AND` logical operator to retrieve only the video fragment for which both queries match. The first query matches a video fragment that starts at 10s and end at 30s. The second query second query matches a video fragment that starts at 50s and ends at 60s.


                      If you don't specify the `proximity` parameter, then it takes the default value of 0s. The video fragments will not overlap, and the API service will not return any results.

                      If you specify a value of 20s for the `proximity` parameter, the first video fragment will start at 0s and end at 50s, and the second video fragment will start at 30s and end at 80s. The video fragments will overlap, and the API service will return a result that starts 30s and ends at 50s.

                      **Default**: `0`.
                    default: 0

    classify:
      content:
        application/json:
          schema:
            type: object
            required:
            - labels
            - options
            - video_id
            properties:
              conversation_option:
                description: |
                  Specifies the type of search the API service will perform. The following values are supported: `semantic` and `transcription`. For details, see the [Conversation option](/docs/conversation-options) page.

                  **Default:** `semantic`
                default: semantic
                enum:
                - semantic
                - transcription
                type: string
              include_clips:
                description: |
                  When this parameter is set to `true`, the API service will return information about each matching video fragment.

                  **Default:** false
                default: false
                type: boolean
              labels:
                description: |
                  An array containing the names and the definitions of entities or actions that the API service must identify.
                items:
                  $ref: '#/components/schemas/classifyLabel'
                minItems: 1
                type: array
              options:
                description: |
                  An array that specifies the sources of information the API service uses when it categorizes a video. For details, see the [Search options](/docs/concepts-search-options) page.
                items:
                  enum:
                  - visual
                  - conversation
                  - text_in_video
                  type: string
                minItems: 1
                type: array
              threshold:
                description: |
                  Use this parameter to filter on the level of confidence that the results match your labels.

                  **Default:** `low`
                default: low
                enum:
                - high
                - medium
                - low
                - none
                type: string
              video_id:
                type: string
                description: |
                  The unique identifier of the video you want to classify.


    update-video-vector:
      content:
        application/json:
          schema:
            type: object
            properties:
              video_title:
                type: string
                description: |
                  Specifies the new title of the video.
              metadata:
                type: object
                description: |
                  Metadata that helps you categorize your videos. You can specify a list of keys and values. Keys must be of type `string`, and values can be of the following types: `string`, `integer`, `float` or `boolean`.

                  **NOTES:**
                  -  If you want to store other types of data such as objects or arrays,  you must convert your data into string values.
                  - You cannot override any of the predefined metadata (example: duration, width, length, etc) associated with a video.
                additionalProperties: {}

    search:
      content:
        application/json:
          schema:
            required:
              - query
              - index_id
            type: object
            properties:
              query:
                type: string
                description: |
                  Your search query. Note that the API supports full natural language-based search. The following examples are valid queries: "birds flying near a castle", "sun shining on water", "chickens on the road", "an officer holding a child's hand.", "crowd cheering in the stadium."
              index_id:
                type: string
                description: |
                  The unique identifier of the index to search.
              search_options:
                type: array
                items:
                  type: string
                minItems: 1
                maxItems: 3
                example:
                  - visual
                  - conversation
                  - text_in_video
                default:
                  - visual
                  - conversation
                  - text_in_video
                description: |
                  An array that specifies the sources of information the API service uses when performing a search. For details, see the [Search options](/docs/concepts-search-options) page.

                  **NOTES:** 
                  - The search options you specify must be a subset of the [indexing options](/docs/concepts-indexing-options) used when you created the index.
                  - You can specify multiple search options in conjunction with the `operator` parameter described below to broaden or narrow your search.
              group_by:
                type: string
                description: |
                  Use this parameter to group or ungroup items in a response. It can take one of the following values:
                  - `video`:  The API service will group the matching video fragments in the response by video.
                  - `clip`: The matching video fragments in the response will not be grouped.

                  **Default:** `clip`
                enum:
                  - video
                  - clip
                default: clip
              threshold:
                description: |
                  Use this parameter to filter on the level of confidence that the search results match your query.

                  **Default:** `low`
                default: low
                enum:
                - high
                - medium
                - low
                - none
                type: string
              sort_option:
                type: string
                description: |
                  Use this parameter to specify the sort order for the response.
                  
                  When performing a search, the API service determines the level of confidence that each video fragment matches your search terms. By default, the search results are sorted on the level of confidence in descending order. 

                  If you set this parameter to `score` and `group_by` is set to `video`, the API service will determine the maxim value of the `score` field for each video and sort the videos in the response by the maximum value of this field. For each video, the matching video fragments will be sorted by the level of confidence.

                  If you set this parameter to `clip_count` and `group_by` is set to `video`, the API service will sort the videos in the response by the number of clips. For each video, the matching video fragments will be sorted by the level of confidence. You can use `clip_count` only when the matching video fragments are sorted by video.
                  

                  **Default:** `score`
                enum:
                  - score
                  - clip_count
                default: score
              operator:
                type: string
                description: |
                  When you perform a search specifying multiple [sources of information](/docs/concepts-search-options), you can use the this parameter to broaden or narrow your search.
                    
                    The following logical operators are supported:
                    
                    - `or`
                    
                    - `and`
                    
                    For details and examples, see the [Using multiple sources of information](/docs/using-simple-queries#using-multiple-sources-of-information) secttion.

                    
                    **Default**: `or`.
                example: or
                default: or
              conversation_option:
                type: string
                enum:
                  - semantic
                  - transcription
                description: |
                  Specifies the type of search the API service will perform. The following values are supported: `semantic` and `transcription`. For details, see the [Conversation option](/docs/conversation-options) page.

                  **Default**: `semantic`.
                default: semantic
              page_limit:
                type: integer
                description: |
                  The number of items to return on each page. When grouping by video, this parameter represents the number of videos per page. Otherwise, it represents the maximum number of video fragments per page. 

                  **Max**: `50`.
                default: 10
              filter:
                type: object
                description: |
                  For string fields, the filter `parameter` returns only the results that equal the value you specify. The following example filters on the videos whose title is "Animal Encounters part 1": `"title": "Animal Encounters part 1"`.
                  
                  For numeric fields, the `filter` parameter returns the results that match based on the arithmetic comparison. The following example filters on the videos whose height is greater than or equal to 400 and less than or equal to 500: `"height": { "gte": 400, "lte": 500 }`.

                  You can also filter by any of the custom fields specified by invoking the `PUT` method of the `/indexes/:index-id/videos/:video-id` endpoint.  The following example returns only the videos for which a custom field named `needsReview` of type `boolean` is set to `true`: `"needs_review": true`.

                  For more details and examples, see the [Filter search results based on metadata](/docs/concepts-filtering-search-results) page.
                properties:
                  id:
                    type: array
                    description: An array of strings that restricts your search results based on the specified video IDs.
                    items:
                      type: string
                  duration:
                    type: number
                    description: 'A numeric field that restricts your search results based on duration, expressed in seconds.'
                  width:
                    type: number
                    description: A numeric field that restricts your search results based on width.
                  height:
                    type: number
                    description: A numeric field that restricts your search results based on height.
                  size:
                    type: number
                    description: 'A numeric field that restricts your search results based on size, expressed in bytes.'
                  title:
                    type: string
                    description: A string field that restricts your search results based on the title of the video.

                additionalProperties: {}
            
    cloud-to-cloud-transfer:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                description: |
                  A JSON file that contains a list. Each element of the list is an object representing a file to be uploaded and indexed and has the following fields:

                  - `index_id`: The unique identifier of the index to which the video file will be uploaded.
                  - `language`: The language of your video.
                  - `object`: The S3 URL of your video.
                  - _(Optional)_ `transcription`: The S3 URL of your transcription.

                  **Example:**
                  ```
                  [
                    {
                      "index_id": "6298d673f1090f1100476d4c",
                      "language": "en",
                      "object": "s3://twelve-labs-docs/01.mp4",
                      "transcription": "s3://twelve-labs-docs/01.srt"
                    },
                    {
                      "index_id": "6298d673f1090f1100476d4c",
                      "language": "en",
                      "object": "s3://twelve-labs-docs/02.mp4",
                      "transcription": "s3://twelve-labs-docs/02.srt"
                    }
                  ]
                  ```

                type: string
                format: binary
    createVideoIndexingTask:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - index_id
            properties:
              index_id:
                type: string
                description: |
                  The unique identifier of the index to which the video is being uploaded.
              provide_transcription:
                type: boolean
                description: |
                  A boolean value specifying whether or not you provide a transcription for this video.
                default: false
              language:
                type: string
                description: Must be set to `en`.
                default: en
              video_file:
                type: string
                format: binary
                description: |
                  Specify this parameter to upload a video from your local file system.
              transcription_file:
                type: string
                format: binary
                description: |
                  When the `provide_transcription` parameter is set to `true`, and you want to provide a transcription from the local file system, use the `transcription_file` parameter to pass your transcription file to the API service. It must be a stream of bytes encoded as `multipart/form-data`. The transcription must be in the SRT or VTT format.
              video_url:
                type: string
                description: |
                  Specify this parameter to upload a video from a publicly accessible URL.
              transcription_url:
                type: string
                description: |
                  When the `provide_transcription` parameter is set to `true`, and you want to provide a transcription from a publicly accessible URL, use the `transcription_url` parameter to specify the URL of your transcription. The transcription must be in the SRT or VTT format.
    updateIndex:
      content:
        application/json:
          schema:
            type: object
            required:
              - index_name
            properties:
              index_name:
                type: string
                description: |
                  The name of the index.
    createIndex:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - engine_id
                - index_options
                - index_name
              properties:
                engine_id:
                  type: string
                  description: |
                    Specifies the engine used by this index. The following engines are available:
                      - `marengo2`
                      
                      - `marengo`

                    **NOTES**:

                      - Twelve Labs strongly recommends you use `marengo2`.

                      - You cannot change the engine once the index has been created.

                    For details about engines, see the [Engines](/docs/concepts-engines) page.
                  default: marengo2
                index_options:
                  type: array
                  description: |
                    An array that specifies how the API service will process the videos uploaded to this index. Must be a subset of `["visual", "conversation", "text_in_video"]`. For more details, see the [Indexing options](/docs/concepts-indexing-options) page.
                  items:
                    type: string
                  minItems: 1
                  maxItems: 3
                  default:
                    - visual
                    - conversation
                    - text_in_video
                index_name:
                  type: string
                  description: |
                    The name of the index. Make sure you use a succinct and descriptive name.
                addons:
                  type: array
                  description: |
                    An array specifying which add-ons should be enabled. Each entry in the array is an addon, and the following values are supported:
                    - `thumbnail`: Enables thumbnail generation.
                    - `logo`: Enables logo detection.
                    
                    If you don't provide this parameter, no add-ons will be enabled.

                    **NOTE**:
                    - You cannot disable an add-on once the index has been created.
                  items:
                    type: string
                  minItems: 1
                  maxItems: 2
                  default:
                    - thumbnail
                    - logo

            example:
              engine_id: marengo2
              index_options:
                - visual
                - conversation
                - text_in_video
              addons:
                - thumbnail
                - logo
              index_name: myIndex
